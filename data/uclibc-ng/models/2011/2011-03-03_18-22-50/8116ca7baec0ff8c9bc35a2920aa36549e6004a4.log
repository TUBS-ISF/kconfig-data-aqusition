"2011-03-03 18:22:50 +0100"
diff --git a/extra/Configs/Config.in b/extra/Configs/Config.in
index 15da168d5..4d2c870bd 100644
--- a/extra/Configs/Config.in
+++ b/extra/Configs/Config.in
@@ -1499,6 +1499,7 @@ config UCLIBC_HAS_GLIBC_CUSTOM_PRINTF
 	help
 	  Answer Y to support glibc's register_printf_function() to allow an
 	  application to add its own printf conversion specifiers.
+	  parse_printf_format() is also enabled.
 
 	  NOTE: Limits the number or registered specifiers to 10.
 	  NOTE: Requires new conversion specifiers to be ASCII
diff --git a/libc/stdio/_vfprintf.c b/libc/stdio/_vfprintf.c
index fa5dc44fc..3db8cdf67 100644
--- a/libc/stdio/_vfprintf.c
+++ b/libc/stdio/_vfprintf.c
@@ -417,6 +417,8 @@ extern uintmax_t _load_inttype(int desttype, const void *src, int uflag) attribu
 /**********************************************************************/
 #ifdef L_parse_printf_format
 
+#ifdef __UCLIBC_HAS_GLIBC_CUSTOM_PRINTF__
+
 /* NOTE: This function differs from the glibc version in that parsing stops
  * upon encountering an invalid conversion specifier.  Since this is the way
  * my printf functions work, I think it makes sense to do it that way here.
@@ -484,6 +486,8 @@ size_t parse_printf_format(register const char *template,
 	return count;
 }
 
+#endif
+
 #endif
 /**********************************************************************/
 #ifdef L__ppfs_init
"2011-08-26 09:29:52 +0200"
diff --git a/extra/Configs/Config.in b/extra/Configs/Config.in
index af4c0380f..8f250e04e 100644
--- a/extra/Configs/Config.in
+++ b/extra/Configs/Config.in
@@ -245,7 +245,6 @@ menu "General Library Settings"
 
 config HAVE_NO_PIC
 	bool
-	default n
 
 config DOPIC
 	bool "Generate only Position Independent Code (PIC)"
@@ -257,12 +256,10 @@ config DOPIC
 
 config ARCH_HAS_NO_SHARED
 	bool
-	default n
 
 config ARCH_HAS_NO_LDSO
 	bool
 	select ARCH_HAS_NO_SHARED
-	default n
 
 config HAVE_SHARED
 	bool "Enable shared libraries"
@@ -277,7 +274,6 @@ config FORCE_SHAREABLE_TEXT_SEGMENTS
 	bool "Only load shared libraries which can share their text segment"
 	depends on HAVE_SHARED
 	select DOPIC
-	default n
 	help
 	  If you answer Y here, the uClibc native shared library loader will
 	  only load shared libraries, which do not need to modify any
@@ -326,7 +322,6 @@ config LDSO_PRELOAD_ENV_SUPPORT
 config LDSO_PRELOAD_FILE_SUPPORT
 	bool "Enable library loader preload file (ld.so.preload)"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Enable this to make use of /etc/ld.so.preload. This file contains a
 	  whitespace separated list of shared libraries to be loaded before
@@ -352,7 +347,6 @@ config LDSO_BASE_FILENAME
 config LDSO_STANDALONE_SUPPORT
 	bool "Dynamic linker stand-alone mode support"
 	depends on HAVE_SHARED
-	default n
 	help
 	  The dynamic linker can be run either indirectly through running some
 	  dynamically linked program or library (in which case no command line
@@ -369,7 +363,6 @@ config LDSO_STANDALONE_SUPPORT
 config LDSO_PRELINK_SUPPORT
 	bool "Dynamic linker prelink support"
 	depends on HAVE_SHARED
-	default n
 	select LDSO_STANDALONE_SUPPORT
 	help
 	  The dynamic linker can be used in stand-alone mode by the prelink tool
@@ -393,7 +386,6 @@ config LDSO_RUNPATH
 	bool "Enable ELF RUNPATH tag support"
 	depends on HAVE_SHARED
 	default y if LDSO_CACHE_SUPPORT
-	default n if !LDSO_CACHE_SUPPORT
 	help
 	  ELF's may have dynamic RPATH/RUNPATH tags.  These tags list paths
 	  which extend the library search paths.  They are really only useful
@@ -449,7 +441,6 @@ config UCLIBC_CTOR_DTOR
 config LDSO_GNU_HASH_SUPPORT
 	bool "Enable GNU hash style support"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Newest binutils support a new hash style named GNU-hash. The dynamic
 	  linker will use the new GNU-hash section (.gnu.hash) for symbol lookup
@@ -528,7 +519,6 @@ config UCLIBC_HAS_THREADS
 config UCLIBC_HAS_TLS
 	bool "Thread-Local Storage"
 	depends on UCLIBC_HAS_THREADS_NATIVE
-	default n
 	help
 	  If you want to enable TLS support then answer Y.
 	  This is fast an efficient way to store per-thread local data
@@ -537,7 +527,6 @@ config UCLIBC_HAS_TLS
 
 config PTHREADS_DEBUG_SUPPORT
 	bool "Build pthreads debugging support"
-	default n
 	depends on UCLIBC_HAS_THREADS
 	help
 	  Say Y here if you wish to be able to debug applications that use
@@ -616,7 +605,6 @@ endchoice
 
 config MALLOC_GLIBC_COMPAT
 	bool "Malloc returns live pointer for malloc(0)"
-	default n
 	help
 	  The behavior of malloc(0) is listed as implementation-defined by
 	  SuSv3.  Glibc returns a valid pointer to something, while uClibc
@@ -640,7 +628,6 @@ config UCLIBC_DYNAMIC_ATEXIT
 	  of atexit() and on_exit() functions, limited only by your available
 	  memory.  This can be important when uClibc is used with C++, since
 	  global destructors are implemented via atexit(), and it is quite
-	  possible to exceed the default number when this option is disabled.
 	  Enabling this option adds a few bytes, and more significantly makes
 	  atexit and on_exit depend on malloc, which can be bad when compiling
 	  static executables.
@@ -649,14 +636,12 @@ config UCLIBC_DYNAMIC_ATEXIT
 
 config COMPAT_ATEXIT
 	bool "Old (visible) atexit Support"
-	default n
 	help
 	  Enable this option if you want to update from 0.9.28 to git/0.9.29,
 	  else you will be missing atexit() until you rebuild all apps.
 
 config UCLIBC_SUSV3_LEGACY
 	bool "Enable SuSv3 LEGACY functions"
-	default n
 	#vfork,
 	# h_errno
 	# gethostbyaddr
@@ -677,7 +662,6 @@ config UCLIBC_SUSV3_LEGACY
 
 config UCLIBC_SUSV3_LEGACY_MACROS
 	bool "Enable SuSv3 LEGACY macros"
-	default n
 	help
 	  Enable this option if you want to have SuSv3 LEGACY macros.
 	  Currently applies to bcopy/bzero/bcmp/index/rindex et al.
@@ -685,7 +669,6 @@ config UCLIBC_SUSV3_LEGACY_MACROS
 
 config UCLIBC_SUSV4_LEGACY
 	bool "Enable SuSv4 LEGACY or obsolescent functions"
-	default n
 	help
 	  Enable this option if you want to have SuSv4 LEGACY functions
 	  and macros in the library.
@@ -706,7 +689,6 @@ config UCLIBC_SUSV4_LEGACY
 
 config UCLIBC_STRICT_HEADERS
 	bool "Enable structures and constants for unsupported features"
-	default n
 	help
 	  Enable structures and constants in headers that should not be used,
 	  because the respective feature is disabled.
@@ -717,7 +699,6 @@ config UCLIBC_STRICT_HEADERS
 
 config UCLIBC_HAS_STUBS
 	bool "Provide stubs for unavailable functionality"
-	default n
 	help
 	  With this option uClibc provides non-functional stubs for
 	  functions which are impossible to implement on the target
@@ -732,7 +713,6 @@ config UCLIBC_HAS_SHADOW
 
 config UCLIBC_HAS_PROGRAM_INVOCATION_NAME
 	bool "Support for program_invocation_name"
-	default n
 	help
 	  Support for the GNU-specific program_invocation_name and
 	  program_invocation_short_name strings.  Some GNU packages
@@ -793,7 +773,6 @@ config UNIX98PTY_ONLY
 if UNIX98PTY_ONLY
 config UCLIBC_HAS_GETPT
 	bool "Support getpt() (glibc-compat)"
-	default n
 	depends on UCLIBC_HAS_PTY
 	help
 	  Some packages may need getpt().
@@ -813,7 +792,6 @@ endif
 config UCLIBC_HAS_LIBUTIL
 	bool "Provide libutil library and functions"
 	depends on UCLIBC_HAS_PTY
-	default n
 	help
 	  Provide a libutil library.
 	  This non-standard conforming library provides the following
@@ -995,7 +973,6 @@ config UCLIBC_HAS_BSD_ERR
 
 config UCLIBC_HAS_OBSOLETE_BSD_SIGNAL
 	bool "BSD obsolete signal functions"
-	default n
 	help
 	  These functions are provided as a compatibility interface for
 	  programs that make use of the historical System V signal API.
@@ -1010,7 +987,6 @@ config UCLIBC_HAS_OBSOLETE_BSD_SIGNAL
 
 config UCLIBC_HAS_OBSOLETE_SYSV_SIGNAL
 	bool "SYSV obsolete signal functions"
-	default n
 	help
 	  Use of sysv_signal() should be avoided; use sigaction(2) instead.
 
@@ -1018,7 +994,6 @@ config UCLIBC_HAS_OBSOLETE_SYSV_SIGNAL
 
 config UCLIBC_NTP_LEGACY
 	bool "ntp_*() aliases"
-	default n
 	help
 	  Provide legacy aliases for ntp functions:
 	  ntp_adjtime(), ntp_gettime()
@@ -1027,7 +1002,6 @@ config UCLIBC_NTP_LEGACY
 
 config UCLIBC_SV4_DEPRECATED
 	bool "Enable SVr4 deprecated functions"
-	default n
 	help
 	  These functions are DEPRECATED in System V release 4.
 	  Say N unless you desparately need one of the functions below:
@@ -1217,7 +1191,6 @@ config UCLIBC_HAS_IPV4
 
 config UCLIBC_HAS_IPV6
 	bool "IP version 6 support"
-	default n
 	select UCLIBC_HAS_SOCKET
 	help
 	  If you want to include support for the next version of the Internet
@@ -1227,7 +1200,6 @@ config UCLIBC_HAS_IPV6
 
 config UCLIBC_HAS_RPC
 	bool "Remote Procedure Call (RPC) support"
-	default n
 	# RPC+socket-ipvX doesn't currently work.
 	depends on UCLIBC_HAS_IPV4 || UCLIBC_HAS_IPV6
 	help
@@ -1258,7 +1230,6 @@ config UCLIBC_HAS_REENTRANT_RPC
 
 config UCLIBC_USE_NETLINK
 	bool "Use netlink to query interfaces"
-	default n
 	depends on UCLIBC_HAS_SOCKET
 	help
 	  In newer versions of Linux (2.4.17+), support was added for querying
@@ -1273,7 +1244,6 @@ config UCLIBC_USE_NETLINK
 config UCLIBC_SUPPORT_AI_ADDRCONFIG
 	bool "Support the AI_ADDRCONFIG flag"
 	depends on UCLIBC_USE_NETLINK
-	default n
 	help
 	  The implementation of AI_ADDRCONFIG is aligned with the glibc
 	  implementation using netlink to query interfaces to find both
@@ -1284,7 +1254,6 @@ config UCLIBC_SUPPORT_AI_ADDRCONFIG
 
 config UCLIBC_HAS_BSD_RES_CLOSE
 	bool "Support res_close() (bsd-compat)"
-	default n
 	help
 	  Answer Y if you desperately want to support BSD compatibility in
 	  the network code.
@@ -1303,20 +1272,17 @@ config UCLIBC_HAS_COMPAT_RES_STATE
 
 config UCLIBC_HAS_EXTRA_COMPAT_RES_STATE
 	bool "Use extra compatible but extra bloated _res"
-	default n
 	help
 	  Answer Y if selecting UCLIBC_HAS_COMPAT_RES_STATE is not enough.
 	  As far as I can say, this should never be needed.
 
 config UCLIBC_HAS_LIBRESOLV_STUB
 	bool "Provide libresolv stub"
-	default n
 	help
 	  Provide a dummy resolv library.
 
 config UCLIBC_HAS_LIBNSL_STUB
 	bool "Provide libnsl stub"
-	default n
 	help
 	  Provide a dummy nsl library.
 
@@ -1402,7 +1368,6 @@ endchoice
 
 config UCLIBC_HAS_WCHAR
 	bool "Wide Character Support"
-	default n
 	help
 	  Answer Y to enable wide character support.  This will make uClibc
 	  much larger.  It is also currently required for locale support.
@@ -1413,7 +1378,6 @@ config UCLIBC_HAS_LOCALE
 	bool "Locale Support"
 	select UCLIBC_HAS_WCHAR
 	select UCLIBC_HAS_CTYPE_TABLES
-	default n
 	help
 	  uClibc now has full ANSI/ISO C99 locale support (except for
 	  wcsftime() and collating items in regex).  Be aware that enabling
@@ -1478,7 +1442,6 @@ config UCLIBC_BUILD_MINIMAL_LOCALES
 config UCLIBC_DOWNLOAD_PREGENERATED_LOCALE_DATA
 	bool "Automagically Download the Pre-generated Locale Data (if necessary)"
 	depends on UCLIBC_PREGENERATED_LOCALE_DATA
-	default n
 	help
 	  If you would like the build process to use 'wget' to automatically
 	  download the pregenerated locale data, enable this option.  Otherwise
@@ -1492,7 +1455,6 @@ config UCLIBC_DOWNLOAD_PREGENERATED_LOCALE_DATA
 config UCLIBC_HAS_XLOCALE
 	bool "Extended Locale Support (experimental/incomplete)"
 	depends on UCLIBC_HAS_LOCALE
-	default n
 	help
 	  Answer Y to enable extended locale support similar to that provided
 	  by glibc.  This is primarily intended to support libstd++
@@ -1506,7 +1468,6 @@ config UCLIBC_HAS_HEXADECIMAL_FLOATS
 	bool "Support hexadecimal float notation"
 	depends on UCLIBC_HAS_CTYPE_TABLES
 	depends on UCLIBC_HAS_FLOATS
-	default n
 	help
 	  Answer Y to enable support for hexadecimal float notation in the
 	  (wchar and) char string to floating point conversion functions, as
@@ -1519,7 +1480,6 @@ config UCLIBC_HAS_GLIBC_DIGIT_GROUPING
 	bool "Support glibc's \"'\" flag for allowing locale-specific digit grouping"
 	depends on UCLIBC_HAS_LOCALE
 	depends on UCLIBC_HAS_FLOATS
-	default n
 	help
 	  Answer Y to enable support for glibc's \"'\" flag for allowing
 	  locale-specific digit grouping in base 10 integer conversions and
@@ -1544,7 +1504,6 @@ config UCLIBC_HAS_SCANF_LENIENT_DIGIT_GROUPING
 config UCLIBC_HAS_GLIBC_CUSTOM_PRINTF
 	bool "Support glibc's register_printf_function() (glibc-compat)"
 	depends on !USE_OLD_VFPRINTF
-	default n
 	help
 	  Answer Y to support glibc's register_printf_function() to allow an
 	  application to add its own printf conversion specifiers.
@@ -1560,7 +1519,6 @@ config UCLIBC_HAS_GLIBC_CUSTOM_PRINTF
 config USE_OLD_VFPRINTF
 	bool "Use the old vfprintf implementation"
 	depends on !UCLIBC_HAS_WCHAR
-	default n
 	help
 	  Set to true to use the old vfprintf instead of the new.  This is
 	  roughly C89 compliant with some extensions, and is much smaller.
@@ -1589,7 +1547,6 @@ config UCLIBC_PRINTF_SCANF_POSITIONAL_ARGS
 
 config UCLIBC_HAS_SCANF_GLIBC_A_FLAG
 	bool "Support glibc's 'a' flag for scanf string conversions (not implemented)"
-	default n
 	help
 	  NOTE!!!  Currently Not Implemented!!! Just A Place Holder!!  NOTE!!!
 	  NOTE!!!  Conflicts with an ANSI/ISO C99 scanf flag!!         NOTE!!!
@@ -1667,7 +1624,6 @@ endchoice
 
 config UCLIBC_HAS_STDIO_SHUTDOWN_ON_ABORT
 	bool "Attempt to shutdown stdio subsystem when abort() is called."
-	default n
 	help
 	  ANSI/ISO C99 requires abort() to be asyn-signal-safe.  So there was
 	  a behavioral change made in SUSv3.  Previously, abort() was required
@@ -1716,7 +1672,6 @@ config UCLIBC_HAS_STDIO_AUTO_RW_TRANSITION
 config UCLIBC_HAS_FOPEN_LARGEFILE_MODE
 	bool "Support an fopen() 'F' flag for large file mode (uClibc-specific)"
 	depends on UCLIBC_HAS_LFS
-	default n
 	help
 	  Answer Y to enable a uClibc-specific extension to allow passing an
 	  additional 'F' flag in the mode string for fopen() to specify that
@@ -1726,7 +1681,6 @@ config UCLIBC_HAS_FOPEN_LARGEFILE_MODE
 
 config UCLIBC_HAS_FOPEN_EXCLUSIVE_MODE
 	bool "Support an fopen() 'x' flag for exclusive mode (glibc-compat)"
-	default n
 	help
 	  Answer Y to support a glibc extension to allow passing
 	  additional 'x' flag in the mode string for fopen() to specify that
@@ -1736,7 +1690,6 @@ config UCLIBC_HAS_FOPEN_EXCLUSIVE_MODE
 
 config UCLIBC_HAS_GLIBC_CUSTOM_STREAMS
 	bool "Support fmemopen(), open_memstream(), and fopencookie() (glibc-compat)"
-	default n
 	help
 	  Answer Y to support the glibc 'custom stream' extension functions
 	  fmemopen(), open_memstream(), and fopencookie().
@@ -1747,7 +1700,6 @@ config UCLIBC_HAS_GLIBC_CUSTOM_STREAMS
 
 config UCLIBC_HAS_PRINTF_M_SPEC
 	bool "Support the '%m' specifier in printf format strings (glibc-compat)"
-	default n
 	help
 	  Answer Y to support a glibc extension to interpret '%m' in printf
 	  format strings as an instruction to output the error message string
@@ -1769,7 +1721,6 @@ config UCLIBC_HAS_ERRNO_MESSAGES
 config UCLIBC_HAS_SYS_ERRLIST
 	bool "Support sys_errlist[] (obsolete-compat)"
 	depends on UCLIBC_HAS_ERRNO_MESSAGES
-	default n
 	help
 	  Answer Y if you want to support the obsolete sys_errlist[].
 	  This adds about 0.5k to the library, except for the mips
@@ -1796,7 +1747,6 @@ config UCLIBC_HAS_SIGNUM_MESSAGES
 config UCLIBC_HAS_SYS_SIGLIST
 	bool "Support sys_siglist[] (bsd-compat)"
 	depends on UCLIBC_HAS_SIGNUM_MESSAGES
-	default n
 	help
 	  Answer Y if you want to support sys_siglist[].
 
@@ -1809,7 +1759,6 @@ config UCLIBC_HAS_SYS_SIGLIST
 config UCLIBC_HAS_GETTEXT_AWARENESS
 	bool "Include gettext awareness"
 	depends on UCLIBC_HAS_LOCALE && UCLIBC_MJN3_ONLY
-	default n
 	help
 	  NOTE!!!  Not yet integrated with strerror and strsignal.  NOTE!!!
 
@@ -1832,7 +1781,6 @@ config UCLIBC_HAS_GNU_GETOPT
 
 config UCLIBC_HAS_STDIO_FUTEXES
 	bool "Use futexes for multithreaded I/O locking"
-	default n
 	depends on UCLIBC_HAS_THREADS_NATIVE
 	help
 	  If you want to compile uClibc to use futexes for low-level
@@ -1909,7 +1857,6 @@ config UCLIBC_HAS_FNMATCH_OLD
 config UCLIBC_HAS_WORDEXP
 	bool "Support the wordexp() interface"
 	depends on UCLIBC_HAS_GLOB
-	default n
 	help
 	  The SuSv3 wordexp() interface performs word expansions per the  Shell
 	  and Utilities volume of IEEE Std 1003.1-2001, Section 2.6.  It is
@@ -1921,7 +1868,6 @@ config UCLIBC_HAS_WORDEXP
 
 config UCLIBC_HAS_NFTW
 	bool "Support the nftw() interface"
-	default n
 	help
 	  The SuSv3 nftw() interface is used to recursively descend
 	  directory paths while repeatedly calling a function.
@@ -1931,7 +1877,6 @@ config UCLIBC_HAS_NFTW
 
 config UCLIBC_HAS_FTW
 	bool "Support the ftw() interface"
-	default n
 	depends on UCLIBC_SUSV4_LEGACY
 	help
 	  The SuSv3 ftw() interface is used to recursively descend
@@ -1942,7 +1887,6 @@ config UCLIBC_HAS_FTW
 
 config UCLIBC_HAS_FTS
 	bool "Support the fts() interface (bsd-compat)"
-	default n
 	help
 	  The fts functions are provided for traversing UNIX file hierarchies.
 
@@ -1968,7 +1912,6 @@ config UCLIBC_HAS_GLOB
 config UCLIBC_HAS_GNU_GLOB
 	bool "Support gnu glob() interface"
 	depends on UCLIBC_HAS_GLOB
-	default n
 	help
 	  The gnu glob interface is somewhat larger (weighing in at about 4,2k)
 	  than it's SuSv3 counterpart (and is out of date). It is an old copy
@@ -1981,7 +1924,6 @@ config UCLIBC_HAS_GNU_GLOB
 
 config UCLIBC_HAS_UTMPX
        bool "utmpx based support for tracking login/logouts to/from the system"
-       default n
        help
          Answer y to enable support for accessing user accounting database.
          It can be used to track all login/logout to the system.
@@ -2072,7 +2014,6 @@ config UCLIBC_BUILD_PIE
 	depends on HAVE_SHARED
 	depends on TARGET_arm || TARGET_frv || TARGET_i386 || TARGET_mips || TARGET_powerpc
 	select FORCE_SHAREABLE_TEXT_SEGMENTS
-	default n
 	help
 	  If you answer Y here, ldd and iconv are built as ET_DYN/PIE
 	  executables.
@@ -2087,7 +2028,6 @@ config UCLIBC_BUILD_PIE
 
 config UCLIBC_HAS_ARC4RANDOM
 	bool "Include the arc4random() function"
-	default n
 	help
 	  Answer Y to support the OpenBSD-like arc4random() function. This
 	  function picks a random number between 0 and N, and will always return
@@ -2100,12 +2040,10 @@ config UCLIBC_HAS_ARC4RANDOM
 
 config HAVE_NO_SSP
 	bool
-	default n
 
 config UCLIBC_HAS_SSP
 	bool "Support for GCC stack smashing protector"
 	depends on !HAVE_NO_SSP
-	default n
 	help
 	  Add code to support GCC's -fstack-protector[-all] option to uClibc.
 	  This requires GCC 4.1 or newer.  GCC does not have to provide libssp,
@@ -2126,7 +2064,6 @@ config UCLIBC_HAS_SSP
 config UCLIBC_HAS_SSP_COMPAT
 	bool "Support for gcc-3.x propolice smashing stack protector"
 	depends on UCLIBC_HAS_SSP
-	default n
 	help
 	  Add gcc-3.x propolice smashing stack protector to the library.
 
@@ -2143,7 +2080,6 @@ config UCLIBC_HAS_SSP_COMPAT
 config SSP_QUICK_CANARY
 	bool "Use simple guard values without accessing /dev/urandom"
 	depends on UCLIBC_HAS_SSP
-	default n
 	help
 	  Use gettimeofday(2) to define the __guard without accessing
 	  /dev/urandom.
@@ -2176,7 +2112,6 @@ endchoice
 config UCLIBC_BUILD_SSP
 	bool "Build uClibc with -fstack-protector"
 	depends on UCLIBC_HAS_SSP
-	default n
 	help
 	  Build all uClibc libraries and executables with -fstack-protector,
 	  adding extra stack overflow checking to most uClibc functions.
@@ -2206,7 +2141,6 @@ config UCLIBC_BUILD_RELRO
 config UCLIBC_BUILD_NOW
 	bool "Build uClibc with linker option -z NOW"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Build all libraries and executables with "ld -z now".
 
@@ -2263,7 +2197,6 @@ config UCLIBC_EXTRA_CFLAGS
 
 config DODEBUG
 	bool "Build uClibc with debugging symbols"
-	default n
 	select EXTRA_WARNINGS
 	help
 	  Say Y here if you wish to compile uClibc with debugging symbols.
@@ -2277,7 +2210,6 @@ config DODEBUG
 config DODEBUG_PT
 	bool "Build pthread with debugging output"
 	depends on UCLIBC_HAS_THREADS && LINUXTHREADS_OLD
-	default n
 	help
 	  Enable debug output in libpthread.  This is only useful when doing
 	  development in libpthread itself.
@@ -2296,7 +2228,6 @@ config DOSTRIP
 
 config DOASSERTS
 	bool "Build uClibc with run-time assertion testing"
-	default n
 	help
 	  Say Y here to include runtime assertion tests.
 	  This enables runtime assertion testing in some code, which can
@@ -2306,7 +2237,6 @@ config DOASSERTS
 config SUPPORT_LD_DEBUG
 	bool "Build the shared library loader with debugging support"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Answer Y here to enable all the extra code needed to debug the uClibc
 	  native shared library loader.  The level of debugging noise that is
@@ -2342,7 +2272,6 @@ config SUPPORT_LD_DEBUG
 config SUPPORT_LD_DEBUG_EARLY
 	bool "Build the shared library loader with early debugging support"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Answer Y here to if you find the uClibc shared library loader is
 	  crashing or otherwise not working very early on.  This is typical
@@ -2356,7 +2285,6 @@ config SUPPORT_LD_DEBUG_EARLY
 config UCLIBC_MALLOC_DEBUGGING
 	bool "Build malloc with debugging support"
 	depends on MALLOC || MALLOC_STANDARD
-	default n
 	help
 	  Answer Y here to compile extra debugging support code into malloc.
 	  Malloc debugging output may then be enabled at runtime using the
@@ -2377,7 +2305,6 @@ config UCLIBC_MALLOC_DEBUGGING
 config UCLIBC_HAS_BACKTRACE
 	bool "Add support for application self-debugging"
 	depends on HAVE_SHARED
-	default n
 	help
 	  Answer Y here to compile support for application self-debugging, by adding
 	  a new shared object "libubacktrace.so" that provides the following new
@@ -2401,13 +2328,11 @@ config WARNINGS
 
 config EXTRA_WARNINGS
 	bool "Enable extra annoying warnings"
-	default n
 	help
 	  If you wish to build with extra warnings enabled, say Y here.
 
 config DOMULTI
 	bool "Compile all sources at once into an object"
-	default n
 	help
 	  Set this to compile all sources at once into an object (IMA).
 	  This mode of compilation uses alot of memory but may produce
@@ -2420,7 +2345,6 @@ config DOMULTI
 
 config UCLIBC_MJN3_ONLY
 	bool "Manuel's hidden warnings"
-	default n
 	help
 	  Answer Y here to see all Manuel's personal notes, warnings, and todos.
 
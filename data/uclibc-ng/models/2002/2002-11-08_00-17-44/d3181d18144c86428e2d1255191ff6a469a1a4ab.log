"2002-11-08 00:17:44 +0000"
diff --git a/extra/Configs/Config.alpha b/extra/Configs/Config.alpha
index 0f55c3252..b8c9f2505 100644
--- a/extra/Configs/Config.alpha
+++ b/extra/Configs/Config.alpha
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.arm b/extra/Configs/Config.arm
index f458f23a1..244226446 100644
--- a/extra/Configs/Config.arm
+++ b/extra/Configs/Config.arm
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.cris b/extra/Configs/Config.cris
index 4d3514689..012c39ca4 100644
--- a/extra/Configs/Config.cris
+++ b/extra/Configs/Config.cris
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.h8300 b/extra/Configs/Config.h8300
index 8c17d89a9..8620dfa4a 100644
--- a/extra/Configs/Config.h8300
+++ b/extra/Configs/Config.h8300
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.i386 b/extra/Configs/Config.i386
index 55f609bb6..338981875 100644
--- a/extra/Configs/Config.i386
+++ b/extra/Configs/Config.i386
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.i386.default b/extra/Configs/Config.i386.default
index bc215596f..ed118c95f 100644
--- a/extra/Configs/Config.i386.default
+++ b/extra/Configs/Config.i386.default
@@ -5,21 +5,19 @@
 #
 # Target Architecture Features and Options
 #
+HAVE_ELF=y
 CONFIG_386=y
 # CONFIG_486 is not set
 # CONFIG_586 is not set
-# CONFIG_586TSC is not set
 # CONFIG_586MMX is not set
 # CONFIG_686 is not set
 # CONFIG_PENTIUMIII is not set
 # CONFIG_PENTIUM4 is not set
 # CONFIG_K6 is not set
 # CONFIG_K7 is not set
-# CONFIG_ELAN is not set
 # CONFIG_CRUSOE is not set
 # CONFIG_WINCHIPC6 is not set
 # CONFIG_WINCHIP2 is not set
-# CONFIG_WINCHIP3D is not set
 # CONFIG_CYRIXIII is not set
 UCLIBC_HAS_MMU=y
 UCLIBC_HAS_FLOATS=y
@@ -27,9 +25,7 @@ HAS_FPU=y
 # DO_C99_MATH is not set
 WARNINGS="-Wall"
 KERNEL_SOURCE="/usr/src/linux"
-UCLIBC_UCLINUX_BROKEN_MUNMAP=y
-HAVE_ELF=y
-# HAVE_DOT_HIDDEN is not set
+C_SYMBOL_PREFIX=""
 
 #
 # General Library Settings
@@ -37,6 +33,7 @@ HAVE_ELF=y
 DOPIC=y
 HAVE_SHARED=y
 BUILD_UCLIBC_LDSO=y
+LDSO_LDD_SUPPORT=y
 UCLIBC_HAS_THREADS=y
 UCLIBC_HAS_LFS=y
 # MALLOC is not set
@@ -64,8 +61,12 @@ ASSUME_DEVPTS=y
 SHARED_LIB_LOADER_PATH="$(DEVEL_PREFIX)/lib"
 DEVEL_PREFIX="/usr/$(TARGET_ARCH)-linux-uclibc"
 SYSTEM_DEVEL_PREFIX="$(DEVEL_PREFIX)"
+DEVEL_TOOL_PREFIX="$(DEVEL_PREFIX)/usr"
 
 #
 # uClibc hacking options
 #
 # DODEBUG is not set
+# DOASSERTS is not set
+SUPPORT_LD_DEBUG=y
+SUPPORT_LD_DEBUG_EARLY=y
diff --git a/extra/Configs/Config.i960 b/extra/Configs/Config.i960
index ac35628c2..cf3938ad8 100644
--- a/extra/Configs/Config.i960
+++ b/extra/Configs/Config.i960
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.in b/extra/Configs/Config.in
index a5b820101..96c7e0e4b 100644
--- a/extra/Configs/Config.in
+++ b/extra/Configs/Config.in
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 
diff --git a/extra/Configs/Config.in.arch b/extra/Configs/Config.in.arch
index da64668e8..08adea63d 100644
--- a/extra/Configs/Config.in.arch
+++ b/extra/Configs/Config.in.arch
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 config UCLIBC_HAS_MMU
diff --git a/extra/Configs/Config.m68k b/extra/Configs/Config.m68k
index 48c70fe54..77ba79408 100644
--- a/extra/Configs/Config.m68k
+++ b/extra/Configs/Config.m68k
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.mips b/extra/Configs/Config.mips
index 0f55c3252..b8c9f2505 100644
--- a/extra/Configs/Config.mips
+++ b/extra/Configs/Config.mips
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.mipsel b/extra/Configs/Config.mipsel
index 0f55c3252..b8c9f2505 100644
--- a/extra/Configs/Config.mipsel
+++ b/extra/Configs/Config.mipsel
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.powerpc b/extra/Configs/Config.powerpc
index 0f55c3252..b8c9f2505 100644
--- a/extra/Configs/Config.powerpc
+++ b/extra/Configs/Config.powerpc
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.sh b/extra/Configs/Config.sh
index bcd273487..eeee4ba26 100644
--- a/extra/Configs/Config.sh
+++ b/extra/Configs/Config.sh
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.sparc b/extra/Configs/Config.sparc
index 4d3514689..012c39ca4 100644
--- a/extra/Configs/Config.sparc
+++ b/extra/Configs/Config.sparc
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/Configs/Config.v850 b/extra/Configs/Config.v850
index 3ec971e5e..8a54a8fae 100644
--- a/extra/Configs/Config.v850
+++ b/extra/Configs/Config.v850
@@ -1,6 +1,6 @@
 #
 # For a description of the syntax of this configuration file,
-# see Documentation/kbuild/config-language.txt.
+# see extra/config/Kconfig-language.txt
 #
 
 mainmenu "uClibc C Library Configuration"
diff --git a/extra/config/Kconfig-language.txt b/extra/config/Kconfig-language.txt
new file mode 100644
index 000000000..a3037ffcf
--- /dev/null
+++ b/extra/config/Kconfig-language.txt
@@ -0,0 +1,255 @@
+Introduction
+------------
+
+The configuration database is collection of configuration options
+organized in a tree structure:
+
+	+- Code maturity level options
+	|  +- Prompt for development and/or incomplete code/drivers
+	+- General setup
+	|  +- Networking support
+	|  +- System V IPC
+	|  +- BSD Process Accounting
+	|  +- Sysctl support
+	+- Loadable module support
+	|  +- Enable loadable module support
+	|     +- Set version information on all module symbols
+	|     +- Kernel module loader
+	+- ...
+
+Every entry has its own dependencies. These dependencies are used
+to determine the visible of an entry. Any child entry is only
+visible if its parent entry is also visible.
+
+Menu entries
+------------
+
+Most entries define a config option, all other entries help to organize
+them. A single configuration option is defined like this:
+
+config MODVERSIONS
+	bool "Set version information on all module symbols"
+	depends MODULES
+	help
+	  Usually, modules have to be recompiled whenever you switch to a new
+	  kernel.  ...
+
+Every line starts with a key word and can be followed by multiple
+arguments.  "config" starts a new config entry. The following lines
+define attributes for this config option. Attributes can be the type of
+the config option, input prompt, dependencies, help text and default
+values. A config option can be defined multiple times with the same
+name, but every definition can have only a single input prompt and the
+type must not conflict.
+
+Menu attributes
+---------------
+
+A menu entry can have a number of attributes. Not all of them are
+applicable everywhere (see syntax).
+
+- type definition: "bool"/"tristate"/"string"/"hex"/"integer"
+  Every config option must have a type. There are only two basic types:
+  tristate and string, the other types base on these two. The type
+  definition optionally accepts an input prompt, so these two examples
+  are equivalent:
+
+	bool "Networking support"
+  and
+	bool
+	prompt "Networking support"
+
+- input prompt: "prompt" <prompt> ["if" <expr>]
+  Every menu entry can have at most one prompt, which is used to display
+  to the user. Optionally dependencies only for this prompt can be added
+  with "if".
+
+- default value: "default" <symbol> ["if" <expr>]
+  A config option can have any number of default values. If multiple
+  default values are visible, only the first defined one is active.
+  Default values are not limited to the menu entry, where they are
+  defined, this means the default can be defined somewhere else or be
+  overriden by an earlier definition.
+  The default value is only assigned to the config symbol if no other
+  value was set by the user (via the input prompt above). If an input
+  prompt is visible the default value is presented to the user and can
+  be overridden by him.
+  Optionally dependencies only for this default value can be added with
+  "if".
+
+- dependencies: "depends on"/"requires" <expr>
+  This defines a dependency for this menu entry. If multiple
+  dependencies are defined they are connected with '&&'. Dependencies
+  are applied to all other options within this menu entry (which also
+  accept "if" expression), so these two examples are equivalent:
+
+	bool "foo" if BAR
+	default y if BAR
+  and
+	depends on BAR
+	bool "foo"
+	default y
+
+- help text: "help"
+  This defines a help text. The end of the help text is determined by
+  the level indentation, this means it ends at the first line which has
+  a smaller indentation than the first line of the help text.
+
+
+Menu dependencies
+-----------------
+
+Dependencies define the visibility of a menu entry and can also reduce
+the input range of tristate symbols. The tristate logic used in the
+expressions uses one more state than normal boolean logic to express the
+module state. Dependency expressions have the following syntax:
+
+<expr> ::= <symbol>                             (1)
+           <symbol> '=' <symbol>                (2)
+           <symbol> '!=' <symbol>               (3)
+           '(' <expr> ')'                       (4)
+           '!' <expr>                           (5)
+           <expr> '||' <expr>                   (6)
+           <expr> '&&' <expr>                   (7)
+
+Expressions are listed in decreasing order of precedence. 
+
+(1) Convert the symbol into an expression. Boolean and tristate symbols
+    are simply converted into the respective expression values. All
+    other symbol types result in 'n'.
+(2) If the values of both symbols are equal, it returns 'y',
+    otherwise 'n'.
+(3) If the values of both symbols are equal, it returns 'n',
+    otherwise 'y'.
+(4) Returns the value of the expression. Used to override precedence.
+(5) Returns the result of (2-/expr/).
+(6) Returns the result of min(/expr/, /expr/).
+(7) Returns the result of max(/expr/, /expr/).
+
+An expression can have a value of 'n', 'm' or 'y' (or 0, 1, 2
+respectively for calculations). A menu entry becomes visible when it's
+expression evaluates to 'm' or 'y'.
+
+There are two type of symbols: constant and nonconstant symbols.
+Nonconstant symbols are the most common ones and are defined with the
+'config' statement. Nonconstant symbols consist entirely of alphanumeric
+characters or underscores.
+Constant symbols are only part of expressions. Constant symbols are
+always surrounded by single or double quotes. Within the quote any
+other character is allowed and the quotes can be escaped using '\'.
+
+Menu structure
+--------------
+
+The position of a menu entry in the tree is determined in two ways. First
+it can be specified explicitely:
+
+menu "Network device support"
+	depends NET
+
+config NETDEVICES
+	...
+
+endmenu
+
+All entries within the "menu" ... "endmenu" block become a submenu of
+"Network device support". All subentries inherit the dependencies from
+the menu entry, e.g. this means the dependency "NET" is added to the
+dependency list of the config option NETDEVICES.
+
+The other way to generate the menu structure is done by analyzing the
+dependencies. If a menu entry somehow depends on the previous entry, it
+can be made a submenu of it. First the the previous (parent) symbol must
+be part of the dependency list and then one of these two condititions
+must be true:
+- the child entry must become invisible, if the parent is set to 'n'
+- the child entry must only be visible, if the parent is visible
+
+config MODULES
+	bool "Enable loadable module support"
+
+config MODVERSIONS
+	bool "Set version information on all module symbols"
+	depends MODULES
+
+comment "module support disabled"
+	depends !MODULES
+
+MODVERSIONS directly depends on MODULES, this means it's only visible if
+MODULES is different from 'n'. The comment on the other hand is always
+visible when MODULES it's visible (the (empty) dependency of MODULES is
+also part of the comment dependencies).
+
+
+Kconfig syntax
+--------------
+
+The configuration file describes a series of menu entries, where every
+line starts with a keyword (except help texts). The following keywords
+end a menu entry:
+- config
+- choice/endchoice
+- comment
+- menu/endmenu
+- if/endif
+- source
+The first four also start the definition of a menu entry.
+
+config:
+
+	"config" <symbol>
+	<config options>
+
+This defines a config symbol <symbol> and accepts any of above
+attributes as options.
+
+choices:
+
+	"choice"
+	<choice options>
+	<choice block>
+	"endchoice"
+
+This defines a choice group and accepts any of above attributes as
+options. A choice can only be of type bool or tristate, while a boolean
+choice only allows a single config entry to be selected, a tristate
+choice also allows any number of config entries to be set to 'm'. This
+can be used if multiple drivers for a single hardware exists and only a
+single driver can be compiled/loaded into the kernel, but all drivers
+can be compiled as modules.
+A choice accepts another option "optional", which allows to set the
+choice to 'n' and no entry needs to be selected.
+
+comment:
+
+	"comment" <prompt>
+	<comment options>
+
+This defines a comment which is displayed to the user during the
+configuration process and is also echoed to the output files. The only
+possible options are dependencies.
+
+menu:
+
+	"menu" <prompt>
+	<menu options>
+	<menu block>
+	"endmenu"
+
+This defines a menu block, see "Menu structure" above for more
+information. The only possible options are dependencies.
+
+if:
+
+	"if" <expr>
+	<if block>
+	"endif"
+
+This defines an if block. The dependency expression <expr> is appended
+to all enclosed menu entries.
+
+source:
+
+	"source" <prompt>
+
+This reads the specified configuration file. This file is always parsed.
"2006-04-02 20:17:55 +0000"
diff --git a/Config.in b/Config.in
index e7207d0eb..f118923c5 100644
--- a/Config.in
+++ b/Config.in
@@ -345,7 +345,7 @@ config CONFIG_DEBUG_YANK_SUSv2
 	bool "Disable obsolete features removed before SUSv3?"
 	default y
 	help
-	  This option will disable backwards compatability with SuSv2,
+	  This option will disable backwards compatibility with SuSv2,
 	  specifically, old-style numeric options ('command -1 <file>')
 	  will not be supported in head, tail, and fold.  (Note: should
 	  yank from renice too.)
diff --git a/archival/Config.in b/archival/Config.in
index 7810c354d..e3f6239f2 100644
--- a/archival/Config.in
+++ b/archival/Config.in
@@ -189,7 +189,7 @@ config CONFIG_FEATURE_TAR_COMPRESS
 	  If you enable this option tar will be able to call uncompress,
 	  when extracting .tar.Z archives.
 
-config CONFIG_FEATURE_TAR_OLDGNU_COMPATABILITY
+config CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY
 	bool "  Enable support for old tar header format"
 	default N
 	depends on CONFIG_TAR
diff --git a/archival/libunarchive/get_header_tar.c b/archival/libunarchive/get_header_tar.c
index 682179a02..cd38f4560 100644
--- a/archival/libunarchive/get_header_tar.c
+++ b/archival/libunarchive/get_header_tar.c
@@ -80,7 +80,7 @@ char get_header_tar(archive_handle_t *archive_handle)
 	 * 0's are for the old tar format
 	 */
 	if (strncmp(tar.formated.magic, "ustar", 5) != 0) {
-#ifdef CONFIG_FEATURE_TAR_OLDGNU_COMPATABILITY
+#ifdef CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY
 		if (strncmp(tar.formated.magic, "\0\0\0\0\0", 5) != 0)
 #endif
 			bb_error_msg_and_die("Invalid tar magic");
@@ -144,7 +144,7 @@ char get_header_tar(archive_handle_t *archive_handle)
 		/* Reserved for high performance files, treat as normal file */
 	case 0:
 	case '0':
-#ifdef CONFIG_FEATURE_TAR_OLDGNU_COMPATABILITY
+#ifdef CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY
 		if (last_char_is(file_header->name, '/')) {
 			file_header->mode |= S_IFDIR;
 		} else
diff --git a/archival/tar.c b/archival/tar.c
index ab4d1f266..9d0a7c5e4 100644
--- a/archival/tar.c
+++ b/archival/tar.c
@@ -44,7 +44,7 @@
 
 /* Tar file constants  */
 # define TAR_MAGIC          "ustar"	/* ustar and a null */
-# define TAR_VERSION        "  "	/* Be compatable with GNU tar format */
+# define TAR_VERSION        "  "	/* Be compatible with GNU tar format */
 
 #define TAR_BLOCK_SIZE		512
 #define TAR_MAGIC_LEN		6
diff --git a/coreutils/cp.c b/coreutils/cp.c
index 87f229196..f5baa0d62 100644
--- a/coreutils/cp.c
+++ b/coreutils/cp.c
@@ -46,7 +46,7 @@ int cp_main(int argc, char **argv)
 	}
 	if (flags & 64) {
 		/* Make -r a synonym for -R,
-		 * -r was marked as obsolete in SUSv3, but is included for compatability
+		 * -r was marked as obsolete in SUSv3, but is included for compatibility
 		 */
 		flags |= FILEUTILS_RECUR;
 	}
diff --git a/coreutils/install.c b/coreutils/install.c
index e8dd5060c..7739fb615 100644
--- a/coreutils/install.c
+++ b/coreutils/install.c
@@ -62,7 +62,7 @@ int install_main(int argc, char **argv)
 
 	bb_applet_long_options = install_long_options;
 	bb_opt_complementally = "?:s--d:d--s";
-	/* -c exists for backwards compatability, its needed */
+	/* -c exists for backwards compatibility, its needed */
 	flags = bb_getopt_ulflags(argc, argv, "cdpsg:m:o:", &gid_str, &mode_str, &uid_str);	/* 'a' must be 2nd */
 
 	/* preserve access and modification time, this is GNU behaviour, BSD only preserves modification time */
diff --git a/include/libbb.h b/include/libbb.h
index 0ec332b30..f444084b3 100644
--- a/include/libbb.h
+++ b/include/libbb.h
@@ -218,7 +218,7 @@ extern int vdprintf(int d, const char *format, va_list ap);
 int nfsmount(const char *spec, const char *node, int *flags,
 	     char **mount_opts, int running_bg);
 
-/* Include our own copy of struct sysinfo to avoid binary compatability
+/* Include our own copy of struct sysinfo to avoid binary compatibility
  * problems with Linux 2.4, which changed things.  Grumble, grumble. */
 struct sysinfo {
 	long uptime;			/* Seconds since boot */
diff --git a/include/usage.h b/include/usage.h
index c8984e99b..0ac0284ce 100644
--- a/include/usage.h
+++ b/include/usage.h
@@ -2743,7 +2743,7 @@
 	USAGE_SORT_BIG("\t-s\tstable (don't sort ties alphabetically)\n") \
 	"\t-u\tsuppress duplicate lines" \
 	USAGE_SORT_BIG("\n\t-z\tinput terminated by nulls, not newlines\n") \
-	USAGE_SORT_BIG("\t-mST\tignored for GNU compatability") \
+	USAGE_SORT_BIG("\t-mST\tignored for GNU compatibility") \
 	""
 #define sort_example_usage \
 	"$ echo -e \"e\\nf\\nb\\nd\\nc\\na\" | sort\n" \
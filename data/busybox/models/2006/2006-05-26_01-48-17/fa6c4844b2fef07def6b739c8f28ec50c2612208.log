"2006-05-26 01:48:17 +0000"
diff --git a/examples/depmod.pl b/examples/depmod.pl
index 3211c8a64..0e66ee3eb 100755
--- a/examples/depmod.pl
+++ b/examples/depmod.pl
@@ -116,8 +116,8 @@ my @output = $kernelsyms ? `cat $kernelsyms` : `nm $kernel`;
 warn "\nMODULE = $tgtname\n" if $verbose;
 build_ref_tables($tgtname, \@output, $exp, $dep);
 
-# resolve the dependancies for each module
-# reduce dependancies: remove unresolvable and resolved from vmlinux/System.map
+# resolve the dependencies for each module
+# reduce dependencies: remove unresolvable and resolved from vmlinux/System.map
 # remove duplicates
 foreach my $module (keys %$dep) {
     warn "reducing module: $module\n" if $verbose;
@@ -225,7 +225,7 @@ Example:
 =head1 DESCRIPTION
 
 The purpose of this script is to automagically generate a list of of kernel
-module dependancies.  This script produces dependancy lists that should be
+module dependencies.  This script produces dependency lists that should be
 identical to the depmod program from the modutils package.  Unlike the depmod
 binary, however, depmod.pl is designed to be run on your host system, not
 on your target system.
diff --git a/include/usage.h b/include/usage.h
index 8d4615444..3f894c5b7 100644
--- a/include/usage.h
+++ b/include/usage.h
@@ -291,7 +291,7 @@
 	"\t-l num\tlog level (8 - default)\n" \
 	"\t-S\tlog to syslogd (default)\n" \
 	"\t-L file\tlog to file\n" \
-	"\t-f\trun in fordeground\n" \
+	"\t-f\trun in foreground\n" \
 	"\t-b\trun in background (default)\n" \
 	"\t-c dir\tworking dir"
 
@@ -513,7 +513,7 @@ USE_FEATURE_DATE_ISOFMT( \
 	"\t-i\t\tInstall the package\n" \
 	"\t-l\t\tList of installed packages\n" \
 	"\t-C\t\tConfigure an unpackaged package\n" \
-	"\t-F depends\tIgnore depency problems\n" \
+	"\t-F depends\tIgnore dependency problems\n" \
 	"\t-P\t\tPurge all files of a package\n" \
 	"\t-r\t\tRemove all but the configuration files for a package\n" \
 	"\t-u\t\tUnpack a package, but don't configure it"
@@ -580,7 +580,7 @@ USE_FEATURE_DATE_ISOFMT( \
 	"Displays the DHCP leases granted by udhcpd.\n\n" \
 	"Options:\n" \
 	"\t-f,\t--file=FILENAME\tLeases file to load\n" \
-	"\t-r,\t--remaining\tInterpret lease times as time remaing\n" \
+	"\t-r,\t--remaining\tInterpret lease times as time remaining\n" \
 	"\t-a,\t--absolute\tInterpret lease times as expire time"
 
 #define e2fsck_trivial_usage \
@@ -1421,7 +1421,7 @@ USE_FEATURE_DATE_ISOFMT( \
 	"The upper-case options MQS are used to remove a shared memory\n" \
 	"segment by an shmkey value. The lower-case options mqs are used\n" \
 	"to remove a segment by shmid value.\n" \
-	"\t-m | -M\tRemove the memory segment after the last detatch\n" \
+	"\t-m | -M\tRemove the memory segment after the last detach\n" \
 	"\t-q | -Q\tRemove the message queue\n" \
 	"\t-s | -S\tRemove the semaphore"
 
@@ -1432,7 +1432,7 @@ USE_FEATURE_DATE_ISOFMT( \
 	"Resource specification:\n" \
 	"\t-m\tshared memory segments\n" \
 	"\t-q\tmessage queues\n" \
-	"\t-s\tsempahore arrays\n" \
+	"\t-s\tsemaphore arrays\n" \
 	"\t-a\tall (default)\n" \
 	"Output format:\n" \
 	"\t-t\ttime\n" \
@@ -1944,7 +1944,7 @@ USE_FEATURE_DATE_ISOFMT( \
 "\n" \
 "  alias <alias_name> <mod_name>\n" \
 "    Makes it possible to modprobe alias_name, when there is no such module.\n" \
-"    It makes sense if your mod_name is long, or you want a more reprenstative\n" \
+"    It makes sense if your mod_name is long, or you want a more representative\n" \
 "    name for that module (eg. 'scsi' in place of 'aha7xxx').\n" \
 "    This makes it also possible to use a different set of options (below) for\n" \
 "    the module and the alias.\n" \
@@ -1978,11 +1978,11 @@ USE_FEATURE_DATE_ISOFMT( \
 	"   which are the default for alias 'tulip2'\n\n" \
 	"$ modprobe tulip2 irq=8\n" \
 	"   will load the module 'tulip' with default options 'irq=4 io=0x308 irq=8',\n" \
-	"   which are the default for alias 'tulip2' overriden by the option 'irq=8'\n\n" \
+	"   which are the default for alias 'tulip2' overridden by the option 'irq=8'\n\n" \
 	"   from the command line\n\n" \
 	"$ modprobe tulip2 irq=2 io=0x210\n" \
 	"   will load the module 'tulip' with default options 'irq=4 io=0x308 irq=4 io=0x210',\n" \
-	"   which are the default for alias 'tulip2' overriden by the options 'irq=2 io=0x210'\n\n" \
+	"   which are the default for alias 'tulip2' overridden by the options 'irq=2 io=0x210'\n\n" \
 	"   from the command line\n"
 
 #define more_trivial_usage \
@@ -3409,7 +3409,7 @@ USE_FEATURE_DATE_ISOFMT( \
 	"Executes COMMAND on every item given by standard input.\n\n" \
 	"Options:\n" \
 	USAGE_XARGS_CONFIRMATION("\t-p\tPrompt the user about whether to run each command\n") \
-	"\t-r\tDo not run command for empty readed lines\n" \
+	"\t-r\tDo not run command for empty read lines\n" \
 	USAGE_XARGS_TERMOPT("\t-x\tExit if the size is exceeded\n") \
 	USAGE_XARGS_ZERO_TERM("\t-0\tInput filenames are terminated by a null character\n") \
 	"\t-t\tPrint the command line on stderr before executing it"
diff --git a/modutils/Config.in b/modutils/Config.in
index 4384c54c8..cf46b0863 100644
--- a/modutils/Config.in
+++ b/modutils/Config.in
@@ -84,7 +84,7 @@ config CONFIG_MODPROBE
 	bool "modprobe"
 	default n
 	help
-	  Handle the loading of modules, and their dependancies on a high
+	  Handle the loading of modules, and their dependencies on a high
 	  level.
 
 	  Note that in the state, modprobe does not understand multiple
diff --git a/networking/httpd.c b/networking/httpd.c
index 73a9461fa..1d8c893f2 100644
--- a/networking/httpd.c
+++ b/networking/httpd.c
@@ -200,7 +200,7 @@ typedef struct
 
 static HttpdConfig *config;
 
-static const char request_GET[] = "GET";    /* size algorithic optimize */
+static const char request_GET[] = "GET";    /* size algorithmic optimize */
 
 static const char* const suffixTable [] = {
 /* Warning: shorted equivalent suffix in one line must be first */
diff --git a/networking/udhcp/dumpleases.c b/networking/udhcp/dumpleases.c
index c0c58ee35..08a22f17d 100644
--- a/networking/udhcp/dumpleases.c
+++ b/networking/udhcp/dumpleases.c
@@ -30,7 +30,7 @@ static void ATTRIBUTE_NORETURN show_usage(void)
 	printf(
 "Usage: dumpleases -f <file> -[r|a]\n\n"
 "  -f, --file=FILENAME             Leases file to load\n"
-"  -r, --remaining                 Interepret lease times as time remaing\n"
+"  -r, --remaining                 Interepret lease times as time remaining\n"
 "  -a, --absolute                  Interepret lease times as expire time\n");
 	exit(0);
 }
diff --git a/scripts/config/Kconfig-language.txt b/scripts/config/Kconfig-language.txt
index 493749b32..9b90bc392 100644
--- a/scripts/config/Kconfig-language.txt
+++ b/scripts/config/Kconfig-language.txt
@@ -69,7 +69,7 @@ applicable everywhere (see syntax).
   default values are visible, only the first defined one is active.
   Default values are not limited to the menu entry, where they are
   defined, this means the default can be defined somewhere else or be
-  overriden by an earlier definition.
+  overridden by an earlier definition.
   The default value is only assigned to the config symbol if no other
   value was set by the user (via the input prompt above). If an input
   prompt is visible the default value is presented to the user and can
diff --git a/util-linux/fdisk.c b/util-linux/fdisk.c
index 2042951d9..8ceeb4835 100644
--- a/util-linux/fdisk.c
+++ b/util-linux/fdisk.c
@@ -5075,7 +5075,7 @@ static void
 add_partition(int n, int sys)
 {
 	char mesg[256];         /* 48 does not suffice in Japanese */
-	int i, readed = 0;
+	int i, num_read = 0;
 	struct partition *p = ptes[n].part_table;
 	struct partition *q = ptes[ext_index].part_table;
 	long long llimit;
@@ -5124,12 +5124,12 @@ add_partition(int n, int sys)
 		}
 		if (start > limit)
 			break;
-		if (start >= temp+units_per_sector && readed) {
+		if (start >= temp+units_per_sector && num_read) {
 			printf(_("Sector %llu is already allocated\n"), (unsigned long long)temp);
 			temp = start;
-			readed = 0;
+			num_read = 0;
 		}
-		if (!readed && start == temp) {
+		if (!num_read && start == temp) {
 			off_t saved_start;
 
 			saved_start = start;
@@ -5139,9 +5139,9 @@ add_partition(int n, int sys)
 				start = (start - 1) * units_per_sector;
 				if (start < saved_start) start = saved_start;
 			}
-			readed = 1;
+			num_read = 1;
 		}
-	} while (start != temp || !readed);
+	} while (start != temp || !num_read);
 	if (n > 4) {                    /* NOT for fifth partition */
 		struct pte *pe = &ptes[n];
 
diff --git a/util-linux/nfsmount.c b/util-linux/nfsmount.c
index 7b742cb5f..4ab415f0f 100644
--- a/util-linux/nfsmount.c
+++ b/util-linux/nfsmount.c
@@ -623,7 +623,7 @@ int nfsmount(const char *spec, const char *node, int *flags,
 		return retval;
 	}
 
-	/* create mount deamon client */
+	/* create mount daemon client */
 	/* See if the nfs host = mount host. */
 	if (mounthost) {
 	  if (mounthost[0] >= '0' && mounthost[0] <= '9') {
@@ -835,7 +835,7 @@ int nfsmount(const char *spec, const char *node, int *flags,
 #endif
 	}
 #ifdef NFS_MOUNT_DEBUG
-	printf(_("using port %d for nfs deamon\n"), port);
+	printf(_("using port %d for nfs daemon\n"), port);
 #endif
 	server_addr.sin_port = htons(port);
 	 /*
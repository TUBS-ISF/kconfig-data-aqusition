"2007-04-15 08:43:23 +0000"
diff --git a/include/usage.h b/include/usage.h
index 2fb8112b0..afcc4b3d7 100644
--- a/include/usage.h
+++ b/include/usage.h
@@ -571,9 +571,10 @@
        "Deallocate unused virtual terminal /dev/ttyN"
 
 #define delgroup_trivial_usage \
-       "GROUP"
+        USE_FEATURE_DEL_USER_FROM_GROUP("[USER] ")"GROUP"
 #define delgroup_full_usage \
-       "Delete group GROUP from the system"
+       "Delete group GROUP from the system" \
+        USE_FEATURE_DEL_USER_FROM_GROUP(" or user USER from group GROUP")
 
 #define deluser_trivial_usage \
        "USER"
diff --git a/loginutils/Config.in b/loginutils/Config.in
index 1d52cdfe5..e8ab9ec3c 100644
--- a/loginutils/Config.in
+++ b/loginutils/Config.in
@@ -74,6 +74,14 @@ config DELGROUP
 	help
 	  Utility for deleting a group account.
 
+config FEATURE_DEL_USER_FROM_GROUP
+	bool "Support for removing users from groups."
+	default n
+	depends on DELGROUP
+	help
+	  If called with two non-option arguments, deluser 
+	  or delgroup will remove an user from a specified group.
+
 config ADDUSER
 	bool "adduser"
 	default n
diff --git a/loginutils/deluser.c b/loginutils/deluser.c
index e9bde00bd..2781df319 100644
--- a/loginutils/deluser.c
+++ b/loginutils/deluser.c
@@ -1,10 +1,10 @@
 /* vi: set sw=4 ts=4: */
 /*
- * deluser (remove lusers from the system ;) for TinyLogin
+ * deluser/delgroup implementation for busybox
  *
  * Copyright (C) 1999 by Lineo, inc. and John Beppu
  * Copyright (C) 1999,2000,2001 by John Beppu <beppu@codepoet.org>
- * Unified with delgroup by Tito Ragusa <farmatito@tiscali.it>
+ * Copyright (C) 2007 by Tito Ragusa <farmatito@tiscali.it>
  *
  * Licensed under GPL version 2, see file LICENSE in this tarball for details.
  *
@@ -12,72 +12,114 @@
 
 #include "busybox.h"
 
-static void del_line_matching(const char *login, const char *filename)
+/* Status */
+#define STATUS_OK            0
+#define NAME_NOT_FOUND       1
+#define MEMBER_NOT_FOUND     2
+
+static void del_line_matching(char **args,
+		const char *filename,
+		FILE *(*fopen_func)(const char *fileName, const char *mode))
 {
-	char *line;
 	FILE *passwd;
-	int len = strlen(login);
-	int found = 0;
-	llist_t *plist = NULL;
+	smallint error = NAME_NOT_FOUND;
+	char *name = (ENABLE_FEATURE_DEL_USER_FROM_GROUP && args[2]) ? args[2] : args[1];
+	char *line, *del;
+	char *new = xzalloc(1);
 
-	passwd = fopen_or_warn(filename, "r");
-	if (!passwd) return;
+	passwd = fopen_func(filename, "r");
+	if (passwd) {
+		while ((line = xmalloc_fgets(passwd))) {
+			int len = strlen(name);
 
-	while ((line = xmalloc_fgets(passwd))) {
-		if (!strncmp(line, login, len)
-		 && line[len] == ':'
-		) {
-			found++;
+			if (strncmp(line, name, len) == 0
+			 && line[len] == ':'
+			) {
+				error = STATUS_OK;
+				if (ENABLE_FEATURE_DEL_USER_FROM_GROUP) {
+					struct group *gr;
+					char *p;
+					if (args[2]
+					 /* There were two args on commandline */
+					 && (gr = getgrnam(name))
+					 /* The group was not deleted in the meanwhile */
+					 && (p = strrchr(line, ':'))
+					 /* We can find a pointer to the last ':' */
+					) {
+						error = MEMBER_NOT_FOUND;
+						/* Move past ':' (worst case to '\0') and cut the line */
+						p[1] = '\0';
+						/* Reuse p */
+						for (p = xzalloc(1); *gr->gr_mem != NULL; gr->gr_mem++) {
+							/* Add all the other group members */
+							if (strcmp(args[1], *gr->gr_mem) != 0) {
+								del = p;
+								p = xasprintf("%s%s%s", p, p[0] ? "," : "", *gr->gr_mem);
+								free(del);
+							} else
+								error = STATUS_OK;
+						}
+						/* Recompose the line */
+						line = xasprintf("%s%s\n", line, p);
+						if (ENABLE_FEATURE_CLEAN_UP) free(p);
+					} else
+						goto skip;
+				}
+			}
+			del = new;
+			new = xasprintf("%s%s", new, line);
+			free(del);
+ skip:
 			free(line);
-		} else {
-			llist_add_to_end(&plist, line);
 		}
-	}
 
-	if (!ENABLE_FEATURE_CLEAN_UP) {
-		if (!found) {
-			bb_error_msg("can't find '%s' in '%s'", login, filename);
-			return;
-		}
-		passwd = fopen_or_warn(filename, "w");
-		if (passwd)
-			while ((line = llist_pop(&plist)))
-				fputs(line, passwd);
-	} else {
-		if (!found) {
-			bb_error_msg("can't find '%s' in '%s'", login, filename);
-			goto clean_up;
-		}
-		fclose(passwd);
-		passwd = fopen_or_warn(filename, "w");
-		if (passwd) {
- clean_up:
-			while ((line = llist_pop(&plist))) {
-				if (found) fputs(line, passwd);
-				free(line);
+		if (ENABLE_FEATURE_CLEAN_UP) fclose(passwd);
+
+		if (error) {
+			if (ENABLE_FEATURE_DEL_USER_FROM_GROUP && error == MEMBER_NOT_FOUND) {
+				/* Set the correct values for error message */
+				filename = name;
+				name = args[1];
+			}
+			bb_error_msg("can't find %s in %s", name, filename);
+		} else {
+			passwd = fopen_func(filename, "w");
+			if (passwd) {
+				fputs(new, passwd);
+				if (ENABLE_FEATURE_CLEAN_UP) fclose(passwd);
 			}
-			fclose(passwd);
 		}
 	}
+	free(new);
 }
 
 int deluser_main(int argc, char **argv);
 int deluser_main(int argc, char **argv)
 {
-	if (argc != 2)
-		bb_show_usage();
-
-	if (ENABLE_DELUSER
-	 && (!ENABLE_DELGROUP || applet_name[3] == 'u')
+	if (argc == 2 
+	 || (ENABLE_FEATURE_DEL_USER_FROM_GROUP 
+	    && (applet_name[3] == 'g' && argc == 3))
 	) {
-		del_line_matching(argv[1], bb_path_passwd_file);
+		if (geteuid())
+			bb_error_msg_and_die(bb_msg_perm_denied_are_you_root);
+		
+		if ((ENABLE_FEATURE_DEL_USER_FROM_GROUP && argc != 3) 
+		 || ENABLE_DELUSER
+		 || (ENABLE_DELGROUP && ENABLE_DESKTOP)
+		) {
+			if (ENABLE_DELUSER
+			 && (!ENABLE_DELGROUP || applet_name[3] == 'u')
+			) {
+				del_line_matching(argv, bb_path_passwd_file, xfopen);
+				if (ENABLE_FEATURE_SHADOWPASSWDS)
+					del_line_matching(argv, bb_path_shadow_file, fopen_or_warn);
+			} else if (ENABLE_DESKTOP && ENABLE_DELGROUP && getpwnam(argv[1]))
+				bb_error_msg_and_die("can't remove primary group of user %s", argv[1]);
+		}
+		del_line_matching(argv, bb_path_group_file, xfopen);
 		if (ENABLE_FEATURE_SHADOWPASSWDS)
-			del_line_matching(argv[1], bb_path_shadow_file);
-	}
-	del_line_matching(argv[1], bb_path_group_file);
-	if (ENABLE_FEATURE_SHADOWPASSWDS)
-		del_line_matching(argv[1], bb_path_gshadow_file);
-
-	return EXIT_SUCCESS;
+			del_line_matching(argv, bb_path_gshadow_file, fopen_or_warn);
+		return EXIT_SUCCESS;
+	} else
+		bb_show_usage();
 }
-
diff --git a/scripts/defconfig b/scripts/defconfig
index 009026e5a..c9086eb13 100644
--- a/scripts/defconfig
+++ b/scripts/defconfig
@@ -349,6 +349,7 @@ CONFIG_USE_BB_PWD_GRP=y
 CONFIG_ADDGROUP=y
 CONFIG_FEATURE_ADDUSER_TO_GROUP=y
 CONFIG_DELGROUP=y
+CONFIG_FEATURE_DEL_USER_FROM_GROUP=y
 CONFIG_ADDUSER=y
 CONFIG_DELUSER=y
 CONFIG_GETTY=y
"2020-06-23 13:59:40 +0200"
diff --git a/src/kern/arm/bsp/imx/Kconfig b/src/kern/arm/bsp/imx/Kconfig
index 566a33a..8434355 100644
--- a/src/kern/arm/bsp/imx/Kconfig
+++ b/src/kern/arm/bsp/imx/Kconfig
@@ -75,12 +75,37 @@ config PF_IMX_7
         help
           Choose for i.MX7 platform.
 
+config PF_IMX_8M
+	bool "i.MX8M"
+	depends on PF_IMX
+	select CAN_ARM_CPU_CORTEX_A53
+	select HAS_CPU_VIRT
+        select HAS_ARM_PSCI
+        select ARM_PSCI
+        select ARM_GIC
+        select HAVE_ARM_GICV3
+	help
+	  Choose for i.MX8M platforms.
+
+config PF_IMX_8X
+	bool "i.MX8X"
+	depends on PF_IMX
+	select CAN_ARM_CPU_CORTEX_A35
+	select HAS_CPU_VIRT
+        select HAS_ARM_PSCI
+        select ARM_PSCI
+        select ARM_GIC
+        select HAVE_ARM_GICV3
+	help
+	  Choose for i.MX8X platforms.
+
 endchoice
 
 config PF_IMX_RAM_PHYS_BASE
 	hex
 	default 0xc0000000 if PF_IMX_21
-	default 0x40000000 if PF_IMX_28
+	default 0x40000000 if PF_IMX_28 || PF_IMX_8M
+	default 0x80200000 if PF_IMX_8X
 	default 0x80000000 if PF_IMX_35 || PF_IMX_6UL || PF_IMX_7
 	default 0x90000000 if PF_IMX_51
         default 0x10000000 if PF_IMX_6
diff --git a/src/kern/arm/bsp/imx/Modules b/src/kern/arm/bsp/imx/Modules
index dcaa096..50c57ee 100644
--- a/src/kern/arm/bsp/imx/Modules
+++ b/src/kern/arm/bsp/imx/Modules
@@ -1,6 +1,7 @@
 # vim:set ft=make:
 
 OBJECTS_LIBUART         += uart_imx.o uart_pl011.o
+OBJECTS_LIBUART         += $(if $(CONFIG_PF_IMX_8X),uart_lpuart.o)
 PREPROCESS_PARTS        += generic_tickless_idle
 PREPROCESS_PARTS	+= $(if $(CONFIG_PF_IMX_21),kern_start_0xd)
 PREPROCESS_PARTS        += $(if $(CONFIG_PF_IMX_35),imx_epit)
@@ -15,10 +16,13 @@ PREPROCESS_PARTS        += $(if $(CONFIG_PF_IMX_6UL),pic_gic \
                                                      arm_generic_timer)
 PREPROCESS_PARTS        += $(if $(CONFIG_PF_IMX_7),pic_gic \
                                                    arm_generic_timer)
+PREPROCESS_PARTS        += $(if $(CONFIG_ARM_V8),pic_gic \
+                                                 arm_generic_timer)
 RAM_PHYS_BASE           := $(CONFIG_PF_IMX_RAM_PHYS_BASE)
 
 INTERFACES_KERNEL     += $(if $(CONFIG_PF_IMX_6UL),generic_timer)
 INTERFACES_KERNEL     += $(if $(CONFIG_PF_IMX_7),generic_timer)
+INTERFACES_KERNEL     += $(if $(CONFIG_ARM_V8),generic_timer)
 INTERFACES_KERNEL-$(CONFIG_PF_IMX_35) += timer_imx_epit
 INTERFACES_KERNEL-$(CONFIG_PF_IMX_51) += timer_imx_epit
 INTERFACES_KERNEL-$(CONFIG_PF_IMX_53) += timer_imx_epit
@@ -42,6 +46,10 @@ LIBUART_HDR-$(CONFIG_PF_IMX_6UL)   += uart_imx.h
 LIBUART_TYP-$(CONFIG_PF_IMX_6UL)   += L4::Uart_imx6
 LIBUART_HDR-$(CONFIG_PF_IMX_7)     += uart_imx.h
 LIBUART_TYP-$(CONFIG_PF_IMX_7)     += L4::Uart_imx7
+LIBUART_HDR-$(CONFIG_PF_IMX_8X)    += uart_lpuart.h
+LIBUART_TYP-$(CONFIG_PF_IMX_8X)    += L4::Uart_lpuart
+LIBUART_HDR-$(CONFIG_PF_IMX_8M)    += uart_imx.h
+LIBUART_TYP-$(CONFIG_PF_IMX_8M)    += L4::Uart_imx8
 
 CXXFLAGS_uart-libuart += -include $(LIBUART_HDR-y) -DFIASCO_UART_TYPE=$(LIBUART_TYP-y)
 
@@ -56,6 +64,7 @@ pic_IMPL              += $(if $(CONFIG_PF_IMX_53),pic-gic pic-arm-imx-gic)
 pic_IMPL              += $(if $(CONFIG_PF_IMX_6),pic-gic pic-arm-imx-gic)
 pic_IMPL              += $(if $(CONFIG_PF_IMX_6UL),pic-gic pic-arm-imx-gic)
 pic_IMPL              += $(if $(CONFIG_PF_IMX_7),pic-gic pic-arm-imx-gic)
+pic_IMPL              += $(if $(CONFIG_ARM_V8),pic-gic pic-arm-imx-gic)
 timer_IMPL            += $(if $(CONFIG_PF_IMX_21),timer-arm-imx21)
 timer_IMPL            += $(if $(CONFIG_PF_IMX_28),timer-arm-timrot)
 timer_IMPL            += $(if $(CONFIG_PF_IMX_35),timer-arm-imx_epit)
@@ -65,6 +74,7 @@ timer_IMPL            += $(if $(CONFIG_PF_IMX_6_TIMER_MPTIMER),timer-arm-mptimer
 timer_IMPL            += $(if $(CONFIG_PF_IMX_6_TIMER_EPIT),timer-arm-imx_epit)
 timer_IMPL            += $(if $(CONFIG_PF_IMX_6UL),timer-arm-generic timer-arm-generic-imx)
 timer_IMPL            += $(if $(CONFIG_PF_IMX_7),timer-arm-generic timer-arm-generic-imx)
+timer_IMPL            += $(if $(CONFIG_ARM_V8),timer-arm-generic timer-arm-generic-imx)
 timer_tick_IMPL       += $(if $(CONFIG_PF_IMX_6_TIMER_EPIT),timer_tick-broadcast,timer_tick-single-vector)
 reset_IMPL            += reset-arm-imx
 outer_cache_IMPL      += outer_cache-arm-imx6
diff --git a/src/kern/arm/bsp/imx/mem_layout-arm-imx.cpp b/src/kern/arm/bsp/imx/mem_layout-arm-imx.cpp
index 0f45262..09ec42f 100644
--- a/src/kern/arm/bsp/imx/mem_layout-arm-imx.cpp
+++ b/src/kern/arm/bsp/imx/mem_layout-arm-imx.cpp
@@ -120,3 +120,25 @@ public:
     Gpc_phys_base        = 0x303a0000,
   };
 };
+
+INTERFACE [arm && pf_imx_8m]: // ----------------------------------------
+
+EXTENSION class Mem_layout
+{
+public:
+  enum Phys_layout_imx8m : Address {
+    Gic_dist_phys_base   = 0x38800000,
+    Gic_redist_phys_base = 0x38880000,
+  };
+};
+
+INTERFACE [arm && pf_imx_8x]: // ----------------------------------------
+
+EXTENSION class Mem_layout
+{
+public:
+  enum Phys_layout_imx8x : Address {
+    Gic_dist_phys_base = 0x51a00000,
+    Gic_redist_phys_base = 0x51b00000,
+  };
+};
diff --git a/src/kern/arm/bsp/imx/pic-arm-imx-gic.cpp b/src/kern/arm/bsp/imx/pic-arm-imx-gic.cpp
index 5bc5651..bfcb185 100644
--- a/src/kern/arm/bsp/imx/pic-arm-imx-gic.cpp
+++ b/src/kern/arm/bsp/imx/pic-arm-imx-gic.cpp
@@ -3,6 +3,7 @@ INTERFACE [arm && pic_gic && pf_imx]:
 #include "initcalls.h"
 #include "gic.h"
 
+// ------------------------------------------------------------------------
 INTERFACE [arm && pic_gic && (pf_imx_51 || pf_imx_53)]:
 
 EXTENSION class Pic
@@ -10,7 +11,8 @@ EXTENSION class Pic
   enum { Gic_sz = 7 };
 };
 
-INTERFACE [arm && pic_gic && (pf_imx_6 || pf_imx_6ul || pf_imx_7)]:
+// ------------------------------------------------------------------------
+INTERFACE [arm && pic_gic && (pf_imx_6 || pf_imx_6ul || pf_imx_7 || pf_imx_8m)]:
 
 EXTENSION class Pic
 {
@@ -18,7 +20,15 @@ EXTENSION class Pic
 };
 
 // ------------------------------------------------------------------------
-IMPLEMENTATION [arm && pic_gic && pf_imx]:
+INTERFACE [arm && pic_gic && pf_imx_8x]:
+
+EXTENSION class Pic
+{
+  enum { Gic_sz = 10 };
+};
+
+// ------------------------------------------------------------------------
+IMPLEMENTATION [arm && pic_gic && pf_imx && have_arm_gicv2]:
 
 #include "gic_v2.h"
 #include "irq_mgr_multi_chip.h"
@@ -40,7 +50,30 @@ Pic::init()
 }
 
 // ------------------------------------------------------------------------
-IMPLEMENTATION [arm && pic_gic && mp && (pf_imx_6 || pf_imx_7)]:
+IMPLEMENTATION [arm && pic_gic && pf_imx && have_arm_gicv3]:
+
+#include "irq_mgr_multi_chip.h"
+#include "kmem.h"
+#include "gic_v3.h"
+
+PUBLIC static FIASCO_INIT
+void
+Pic::init()
+{
+  typedef Irq_mgr_multi_chip<Gic_sz> M;
+
+  M *m = new Boot_object<M>(1);
+
+  Mmio_register_block dist(Kmem::mmio_remap(Mem_layout::Gic_dist_phys_base));
+  gic = new Boot_object<Gic_v3>(dist.get_mmio_base(),
+                                Kmem::mmio_remap(Mem_layout::Gic_redist_phys_base));
+  m->add_chip(0, gic, gic->nr_irqs());
+
+  Irq_mgr::mgr = m;
+}
+
+// ------------------------------------------------------------------------
+IMPLEMENTATION [arm && pic_gic && mp && (pf_imx_6 || pf_imx_7 || arm_v8)]:
 
 PUBLIC static
 void Pic::init_ap(Cpu_number cpu, bool resume)
diff --git a/src/kern/arm/bsp/imx/platform_control-arm-imx.cpp b/src/kern/arm/bsp/imx/platform_control-arm-imx.cpp
index 3de589e..8ecddb7 100644
--- a/src/kern/arm/bsp/imx/platform_control-arm-imx.cpp
+++ b/src/kern/arm/bsp/imx/platform_control-arm-imx.cpp
@@ -86,3 +86,34 @@ Platform_control::boot_ap_cpus(Address phys_tramp_mp_addr)
   if (cpu_on(0x1, phys_tramp_mp_addr))
     printf("KERNEL: PSCI CPU_ON failed\n");
 }
+
+// ------------------------------------------------------------------------
+IMPLEMENTATION [arm && mp && arm_v8 && arm_psci]:
+
+#include "cpu.h"
+#include "psci.h"
+
+PUBLIC static
+void
+Platform_control::boot_ap_cpus(Address phys_tramp_mp_addr)
+{
+  int seq = 1;
+  for (unsigned i = 0; i < 4; ++i)
+    {
+      int r = cpu_on(i, phys_tramp_mp_addr);
+      if (r)
+        {
+          if (r != Psci::Psci_already_on)
+            printf("KERNEL: CPU%d boot-up error: %d\n", i, r);
+          continue;
+        }
+
+      while (!Cpu::online(Cpu_number(seq)))
+        {
+          Mem::barrier();
+          Proc::pause();
+        }
+      ++seq;
+    }
+}
+
diff --git a/src/kern/arm/bsp/imx/reset-arm-imx.cpp b/src/kern/arm/bsp/imx/reset-arm-imx.cpp
index f038de2..13cc7c1 100644
--- a/src/kern/arm/bsp/imx/reset-arm-imx.cpp
+++ b/src/kern/arm/bsp/imx/reset-arm-imx.cpp
@@ -83,7 +83,21 @@ platform_reset(void)
   platform_imx_cpus_off();
 
   // Enable watchdog with smallest timeout possible (0.5s)
-  Io::modify<Unsigned16>(WCR_WDE, 0xff00, Kmem::mmio_remap(WCR));
+  Io::modify<Unsigned16>(WCR_WDE, 0xff10, Kmem::mmio_remap(WCR));
+
+  for (;;)
+    ;
+}
+
+// ------------------------------------------------------------------------
+IMPLEMENTATION [arm && arm_v8]:
+
+#include "platform_control.h"
+
+void __attribute__ ((noreturn))
+platform_reset(void)
+{
+  Platform_control::system_reset();
 
   for (;;)
     ;
diff --git a/src/kern/arm/bsp/imx/timer-arm-generic-imx.cpp b/src/kern/arm/bsp/imx/timer-arm-generic-imx.cpp
index f47cd93..ab8ba59 100644
--- a/src/kern/arm/bsp/imx/timer-arm-generic-imx.cpp
+++ b/src/kern/arm/bsp/imx/timer-arm-generic-imx.cpp
@@ -1,5 +1,5 @@
 // ------------------------------------------------------------------------
-IMPLEMENTATION [arm && arm_generic_timer && (pf_imx_6ul || pf_imx_7)]:
+IMPLEMENTATION [arm && arm_generic_timer && (pf_imx_6ul || pf_imx_7 || arm_v8)]:
 
 PUBLIC static
 unsigned Timer::irq()
"2015-09-16 12:28:33 -0300"
diff --git a/Kconfig b/Kconfig
index 9c855d5d..8d55f6f4 100644
--- a/Kconfig
+++ b/Kconfig
@@ -160,6 +160,7 @@ source "src/samples/flow/c-api/Kconfig"
 source "src/samples/flow/compass/Kconfig"
 source "src/samples/flow/foosball/Kconfig"
 source "src/samples/flow/iio/Kconfig"
+source "src/samples/flow/io/Kconfig"
 source "src/samples/flow/galileo-grove-kit/Kconfig"
 source "src/samples/flow/galileo-grove-kit/lcd/Kconfig"
 source "src/samples/flow/gtk-gallery/Kconfig"
diff --git a/src/samples/flow/io/Kconfig b/src/samples/flow/io/Kconfig
new file mode 100644
index 00000000..f394d9e5
--- /dev/null
+++ b/src/samples/flow/io/Kconfig
@@ -0,0 +1,4 @@
+config FLOW_IO_SAMPLE
+	bool
+	depends on FLOW_FBP_GENERATOR_SAMPLES && FLOW_NODE_TYPE_PWM && FLOW_NODE_TYPE_SERVO_MOTOR
+	default y
diff --git a/src/samples/flow/io/Makefile b/src/samples/flow/io/Makefile
new file mode 100644
index 00000000..20fb85ff
--- /dev/null
+++ b/src/samples/flow/io/Makefile
@@ -0,0 +1,17 @@
+sample-$(FLOW_IO_SAMPLE) += \
+	io-pwm \
+	io-servo-motor
+
+sample-io-pwm-$(FLOW_IO_SAMPLE) := \
+	pwm.fbp
+sample-io-pwm-$(FLOW_IO_SAMPLE)-deps := \
+	flow/pwm.mod
+sample-io-pwm-$(FLOW_IO_SAMPLE)-conffile := \
+	pwm.json
+
+sample-io-servo-motor-$(FLOW_IO_SAMPLE) := \
+	servo-motor.fbp
+sample-io-servo-motor-$(FLOW_IO_SAMPLE)-deps := \
+	flow/servo-motor.mod
+sample-io-servo-motor-$(FLOW_IO_SAMPLE)-conffile := \
+	servo-motor.json
diff --git a/src/samples/flow/io/pwm.fbp b/src/samples/flow/io/pwm.fbp
index f406f596..02df9cd8 100755
--- a/src/samples/flow/io/pwm.fbp
+++ b/src/samples/flow/io/pwm.fbp
@@ -31,18 +31,18 @@
 
 # This example enables a PWM called 'led1' and sets the duty cycle of
 # another called 'led2'. These node types are resolved using the
-# pwm.json, please adjust to your board configuration:
+# pwm.json (edited for leds on pins 3 and 5 on Edison board),
+# please adjust to your board configuration:
 #
 #    $ export SOL_FLOW_MODULE_RESOLVER_CONFFILE=pwm-myboard.json
 #    $ ./pwm.fbp
 #
 # or save it as sol-flow.json
 
-
 t1(timer:interval=1000)
-t2(timer:interval=1000)
+t2(timer:interval=250)
 toggle(boolean/toggle)
-acc(int/accumulator:setup_value=val:1|min:1|max:1000|step:10)
+acc(int/accumulator:setup_value=val:0|min:0|max:2032605|step:7971)
 
 t1 OUT -> IN toggle OUT -> ENABLED led1(Led1)
 toggle OUT -> IN c1(console:prefix="Led1 ")
diff --git a/src/samples/flow/io/pwm.json b/src/samples/flow/io/pwm.json
index ac7bf833..5851ae68 100644
--- a/src/samples/flow/io/pwm.json
+++ b/src/samples/flow/io/pwm.json
@@ -2,14 +2,25 @@
  "$schema": "http://solettaproject.github.io/soletta/schemas/config.schema",
  "nodetypes": [
   {
-   "name": "Servo",
+   "name": "Led1",
    "options": {
     "chip": 0,
-    "duty_cycle_range": "min:544|max:2400",
-    "period": 22000,
-    "pin": 1
+    "pin": 0,
+    "period": 1020408,
+    "duty_cycle": 510204
    },
-   "type": "servo-motor"
+   "type": "pwm"
+  },
+  {
+   "name": "Led2",
+   "options": {
+    "chip": 0,
+    "pin": 1,
+    "period": 2040816,
+    "duty_cycle": 0,
+    "enabled": true
+   },
+   "type": "pwm"
   }
  ]
 }
diff --git a/src/samples/flow/io/servo-motor.fbp b/src/samples/flow/io/servo-motor.fbp
index 3fa4edfd..190e32ac 100755
--- a/src/samples/flow/io/servo-motor.fbp
+++ b/src/samples/flow/io/servo-motor.fbp
@@ -30,17 +30,17 @@
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 # This example controls a servo and sets its angle, adjusting every 3
-# seconds. The node type is resolved using the servo-motor.json,
-# please adjust to your board configuration.
+# seconds. The node type is resolved using the servo-motor.json
+# (edited for servo on pin 3 on Edison board), please adjust to
+# your board configuration.
 #
 #    $ export SOL_FLOW_MODULE_RESOLVER_CONFFILE=servo-motor-myboard.json
 #    $ ./servo-motor.fbp
 #
 # or save it as sol-flow.json
 
-inc(int/accumulator:setup_value=min:0|max:180|step:5|val:0)
+inc(int/accumulator:setup_value=min:0|max:170|step:10|val:0)
 
-timer(timer:interval=3000) OUT -> INC inc OUT -> IN converter(converter/int-to-float)
+timer(timer:interval=2000) OUT -> INC inc OUT -> IN converter(converter/int-to-float)
 converter OUT -> ANGLE servo(Servo)
 converter OUT -> IN _(console)
-
diff --git a/src/samples/flow/io/servo-motor.json b/src/samples/flow/io/servo-motor.json
index 050cc74c..5663ca72 100644
--- a/src/samples/flow/io/servo-motor.json
+++ b/src/samples/flow/io/servo-motor.json
@@ -7,9 +7,9 @@
     "chip": "0",
     "duty_cycle_range": "min:544|max:2400",
     "period": "22000",
-    "pin": "1"
+    "pin": "0"
    },
-   "type": "servo-motor"
+   "type": "servo-motor/controller"
   }
  ]
 }
"2016-05-23 14:22:27 -0300"
diff --git a/src/lib/io/Kconfig b/src/lib/io/Kconfig
index 7bec1f06..0594a903 100644
--- a/src/lib/io/Kconfig
+++ b/src/lib/io/Kconfig
@@ -58,6 +58,9 @@ source "src/modules/pin-mux/intel-galileo-rev-d/Kconfig"
 source "src/modules/pin-mux/intel-galileo-rev-g/Kconfig"
 source "src/modules/pin-mux/intel-edison-rev-c/Kconfig"
 endif
+if PLATFORM_CONTIKI_QMSI
+source "src/modules/pin-mux/contiki-qmsi/Kconfig"
+endif
 
 menuconfig USE_STORAGE
     bool "Persistence Storage Support"
diff --git a/src/modules/pin-mux/Makefile b/src/modules/pin-mux/Makefile
index 907895ab..4ff42358 100644
--- a/src/modules/pin-mux/Makefile
+++ b/src/modules/pin-mux/Makefile
@@ -12,3 +12,11 @@ obj-$(PIN_MUX_INTEL_EDISON_REV_C) += intel-edison-rev-c.mod
 obj-intel-edison-rev-c-$(PIN_MUX_INTEL_EDISON_REV_C) := intel-edison-rev-c/intel-edison-rev-c.o intel-common/intel-common.o
 obj-intel-edison-rev-c-$(PIN_MUX_INTEL_EDISON_REV_C)-extra-cflags := -I$(top_srcdir)src/modules/pin-mux/intel-common
 obj-intel-edison-rev-c-$(PIN_MUX_INTEL_EDISON_REV_C)-type := pin-mux
+
+obj-$(PIN_MUX_CONTIKI_QMSI_QUARK_SE) += contiki-qmsi-quark-se.mod
+obj-contiki-qmsi-quark-se-y := contiki-qmsi/contiki-qmsi-common.o contiki-qmsi/contiki-qmsi-quark-se.o
+obj-contiki-qmsi-quark-se-y-type := pin-mux
+
+obj-$(PIN_MUX_CONTIKI_QMSI_QUARK_D2000) += contiki-qmsi-quark-d2000.mod
+obj-contiki-qmsi-quark-d2000-y := contiki-qmsi/contiki-qmsi-common.o contiki-qmsi/contiki-qmsi-quark-d2000.o
+obj-contiki-qmsi-quark-d2000-y-type := pin-mux
diff --git a/src/modules/pin-mux/contiki-qmsi/Kconfig b/src/modules/pin-mux/contiki-qmsi/Kconfig
new file mode 100644
index 00000000..15cc1d2e
--- /dev/null
+++ b/src/modules/pin-mux/contiki-qmsi/Kconfig
@@ -0,0 +1,7 @@
+config PIN_MUX_CONTIKI_QMSI_QUARK_SE
+    bool
+    default y if BOARD_NAME = "quark-se-devboard"
+
+config PIN_MUX_CONTIKI_QMSI_QUARK_D2000
+    bool
+    default y if BOARD_NAME = "quark-d2000-devboard"
diff --git a/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.c b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.c
new file mode 100644
index 00000000..11d7fd84
--- /dev/null
+++ b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.c
@@ -0,0 +1,38 @@
+/*
+ * This file is part of the Soletta Project
+ *
+ * Copyright (C) 2016 Intel Corporation. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "contiki-qmsi-common.h"
+
+static inline void
+set_mux(uint32_t *pins, uint32_t pin)
+{
+    qm_pmux_fn_t fn;
+
+    fn = (pins[pin / 16] >> ((pin % 16) * 2)) & 0x3;
+    qm_pmux_select(pin, fn);
+}
+
+void
+contiki_qmsi_pin_mux_set(uint32_t *pins, uint32_t pin_count)
+{
+    uint32_t i;
+
+    for (i = 0; i < lim; i++) {
+        set_mux(pins, i++);
+    }
+}
diff --git a/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.h b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.h
new file mode 100644
index 00000000..0f5de5fb
--- /dev/null
+++ b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-common.h
@@ -0,0 +1,29 @@
+/*
+ * This file is part of the Soletta Project
+ *
+ * Copyright (C) 2016 Intel Corporation. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#pragma once
+
+#include <stdint.h>
+
+#include <qm_pinmux.h>
+
+#define HOW_MANY_INTS (QM_PIN_ID_NUM / 16 + (QM_PIN_ID_NUM % 16 ? 1 : 0))
+#define SET_PIN_FN(pins, pin, fn) \
+    pins[(pin) / 16] |= ((fn) & 0x3) << (((pin) % 16) * 2)
+
+void contiki_qmsi_pin_mux_set(uint32_t *pins, uint32_t pin_count);
diff --git a/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-d2000.c b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-d2000.c
new file mode 100644
index 00000000..19af551b
--- /dev/null
+++ b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-d2000.c
@@ -0,0 +1,46 @@
+/*
+ * This file is part of the Soletta Project
+ *
+ * Copyright (C) 2016 Intel Corporation. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "sol-pin-mux-modules.h"
+#include "contiki-qmsi-common.h"
+
+static int
+d2000_mux_init(void)
+{
+    uint32_t pins[HOW_MANY_INTS] = { 0 };
+
+    SET_PIN_FN(pins, QM_PIN_ID_3, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_4, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_6, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_7, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_12, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_13, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_14, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_15, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_16, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_17, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_18, QM_PMUX_FN_2);
+
+    contiki_qmsi_pin_mux_set(pins, QM_PIN_ID_NUM);
+    return 0;
+}
+
+SOL_PIN_MUX_DECLARE(CONTIKI_QMSI_QUARK_D2000,
+    .plat_name = "quark-d2000-devboard",
+    .init = d2000_mux_init,
+    );
diff --git a/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-se.c b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-se.c
new file mode 100644
index 00000000..6ba0bbc3
--- /dev/null
+++ b/src/modules/pin-mux/contiki-qmsi/contiki-qmsi-quark-se.c
@@ -0,0 +1,57 @@
+/*
+ * This file is part of the Soletta Project
+ *
+ * Copyright (C) 2016 Intel Corporation. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "sol-pin-mux-modules.h"
+#include "contiki-qmsi-common.h"
+
+static int
+se_mux_init(void)
+{
+    uint32_t pins[HOW_MANY_INTS] = { 0 };
+
+    SET_PIN_FN(pins, QM_PIN_ID_0, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_1, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_2, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_3, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_8, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_9, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_16, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_17, QM_PMUX_FN_2);
+    SET_PIN_FN(pins, QM_PIN_ID_33, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_40, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_41, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_42, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_43, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_44, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_55, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_56, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_57, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_63, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_64, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_65, QM_PMUX_FN_1);
+    SET_PIN_FN(pins, QM_PIN_ID_66, QM_PMUX_FN_1);
+
+    contiki_qmsi_pin_mux_set(pins, QM_PIN_ID_NUM);
+    return 0;
+}
+
+SOL_PIN_MUX_DECLARE(CONTIKI_QMSI_QUARK_SE,
+    .plat_name = "quark-se-devboard",
+    .init = se_mux_init,
+    );
+
diff --git a/tools/build/Kconfig.contiki b/tools/build/Kconfig.contiki
index ff2f72f2..56be37ee 100644
--- a/tools/build/Kconfig.contiki
+++ b/tools/build/Kconfig.contiki
@@ -7,3 +7,4 @@ config CONTIKI
     select FEATURE_HW_PWM if HAVE_QMSI
     select FEATURE_HW_I2C if HAVE_QMSI
     select FEATURE_HW_SPI if HAVE_QMSI
+    select FEATURE_PIN_MUX if HAVE_QMSI
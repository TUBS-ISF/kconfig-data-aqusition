"2016-05-09 16:15:26 -0300"
diff --git a/Kconfig b/Kconfig
index 8fe05c44..971674db 100644
--- a/Kconfig
+++ b/Kconfig
@@ -191,7 +191,7 @@ source "src/samples/bluetooth/Kconfig"
 
 config FLOW_SAMPLES
 	bool "Flow samples"
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 	default y
 
 config FLOW_FBP_GENERATOR_SAMPLES
diff --git a/src/lib/common/sol-mainloop.c b/src/lib/common/sol-mainloop.c
index 0b4b6afc..e95dd2f3 100644
--- a/src/lib/common/sol-mainloop.c
+++ b/src/lib/common/sol-mainloop.c
@@ -64,7 +64,7 @@ extern int sol_blob_init(void);
 extern void sol_blob_shutdown(void);
 extern int sol_crypto_init(void);
 extern void sol_crypto_shutdown(void);
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
 extern int sol_flow_init(void);
 extern void sol_flow_shutdown(void);
 #endif
@@ -150,7 +150,7 @@ sol_init(void)
     if (r < 0)
         goto crypto_error;
 
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
     r = sol_flow_init();
     if (r < 0)
         goto flow_error;
@@ -180,7 +180,7 @@ update_error:
 #ifdef NETWORK
 comms_error:
 #endif
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
     sol_flow_shutdown();
 flow_error:
 #endif
@@ -257,7 +257,7 @@ sol_shutdown(void)
 #ifdef NETWORK
     sol_comms_shutdown();
 #endif
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
     sol_flow_shutdown();
 #endif
     sol_crypto_shutdown();
diff --git a/src/lib/flow/Kconfig b/src/lib/flow/Kconfig
index 39bc2646..e212b5ee 100644
--- a/src/lib/flow/Kconfig
+++ b/src/lib/flow/Kconfig
@@ -1,10 +1,10 @@
-config FLOW_SUPPORT
+config USE_FLOW
 	bool "Flow support"
 	default y
 
 config NODE_DESCRIPTION
 	bool "Node description support"
-	depends on FLOW_SUPPORT && FEATURE_RUNNABLE_PROGRAMS
+	depends on USE_FLOW && FEATURE_RUNNABLE_PROGRAMS
 	default y
 	help
             Add node description support to enable runtime introspection.
@@ -30,7 +30,7 @@ config RESOLVER_CONFFILE
 
 config INSPECTOR
 	bool "Inspector"
-	depends on FLOW_SUPPORT && FEATURE_RUNNABLE_PROGRAMS
+	depends on USE_FLOW && FEATURE_RUNNABLE_PROGRAMS
 	default y
 
 menu "Metatypes"
@@ -40,7 +40,7 @@ source "src/modules/flow-metatype/http-composed-server/Kconfig"
 endmenu
 
 menu "Node Types"
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 source "src/modules/flow/accelerometer/Kconfig"
 source "src/modules/flow/aio/Kconfig"
 source "src/modules/flow/am2315/Kconfig"
diff --git a/src/lib/flow/Makefile b/src/lib/flow/Makefile
index b170247d..a7784d30 100644
--- a/src/lib/flow/Makefile
+++ b/src/lib/flow/Makefile
@@ -1,6 +1,6 @@
-obj-$(FLOW_SUPPORT) += flow.mod
+obj-$(USE_FLOW) += flow.mod
 
-obj-flow-$(FLOW_SUPPORT) := \
+obj-flow-$(USE_FLOW) := \
     sol-flow-node-options.o \
     sol-flow-packet.o \
     sol-flow-simplectype.o \
@@ -27,9 +27,9 @@ endif
 obj-flow-$(RESOLVER_CONFFILE) += \
     sol-flow-resolver-conffile.o
 
-obj-flow-$(FLOW_SUPPORT)-extra-cflags += $(def-resolver-flag)
+obj-flow-$(USE_FLOW)-extra-cflags += $(def-resolver-flag)
 
-headers-$(FLOW_SUPPORT) := \
+headers-$(USE_FLOW) := \
     include/sol-flow.h \
     include/sol-flow-inspector.h \
     include/sol-flow-metatype.h \
diff --git a/src/modules/flow-metatype/http-composed-client/Kconfig b/src/modules/flow-metatype/http-composed-client/Kconfig
index c1e0fd0d..7839c5af 100644
--- a/src/modules/flow-metatype/http-composed-client/Kconfig
+++ b/src/modules/flow-metatype/http-composed-client/Kconfig
@@ -1,6 +1,6 @@
 config FLOW_METATYPE_HTTP_COMPOSED_CLIENT
 	tristate "HTTP client flow metatype"
-	depends on FLOW_SUPPORT && HTTP_CLIENT
+	depends on USE_FLOW && HTTP_CLIENT
 	default m if MODULES=y
 	help
 	    Allow creating HTTP's client node types using composed packets.
diff --git a/src/modules/flow-metatype/http-composed-server/Kconfig b/src/modules/flow-metatype/http-composed-server/Kconfig
index 846f9b1a..48d1757c 100644
--- a/src/modules/flow-metatype/http-composed-server/Kconfig
+++ b/src/modules/flow-metatype/http-composed-server/Kconfig
@@ -1,6 +1,6 @@
 config FLOW_METATYPE_HTTP_COMPOSED_SERVER
 	tristate "HTTP server flow metatype"
-	depends on FLOW_SUPPORT && HTTP_SERVER
+	depends on USE_FLOW && HTTP_SERVER
 	default m if MODULES=y
 	help
 	    Allow creating HTTP server node types using composed packets.
diff --git a/src/modules/flow-metatype/js/Kconfig b/src/modules/flow-metatype/js/Kconfig
index 1fbe72bd..46e645bd 100644
--- a/src/modules/flow-metatype/js/Kconfig
+++ b/src/modules/flow-metatype/js/Kconfig
@@ -1,6 +1,6 @@
 config FLOW_METATYPE_JAVASCRIPT
 	tristate "JavaScript flow metatype"
-	depends on FLOW_SUPPORT && HAVE_DUKTAPE_SRC
+	depends on USE_FLOW && HAVE_DUKTAPE_SRC
 	default m if MODULES=y
 	help
 	    Allow creating node types using JavaScript
diff --git a/src/samples/flow/c-api/Kconfig b/src/samples/flow/c-api/Kconfig
index 1cb6a5fe..ebbfebef 100644
--- a/src/samples/flow/c-api/Kconfig
+++ b/src/samples/flow/c-api/Kconfig
@@ -1,6 +1,6 @@
 config FLOW_C_API_CUSTOM_NODE_TYPES_SAMPLE
 	bool
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 	default y
 
 config FLOW_C_API_HIGHLEVEL_SAMPLE
@@ -10,7 +10,7 @@ config FLOW_C_API_HIGHLEVEL_SAMPLE
 
 config FLOW_C_API_LOWLEVEL_SAMPLE
 	bool
-	depends on FLOW_SUPPORT && FLOW_NODE_TYPE_CONSOLE
+	depends on USE_FLOW && FLOW_NODE_TYPE_CONSOLE
 	default y
 
 config FLOW_C_API_SIMPLECTYPE_SAMPLE
diff --git a/src/shared/Makefile b/src/shared/Makefile
index b181bfae..82c50dcd 100644
--- a/src/shared/Makefile
+++ b/src/shared/Makefile
@@ -6,13 +6,13 @@ obj-libshared-y := \
     sol-util.o \
     sol-random.o
 
-obj-libshared-$(FLOW_SUPPORT) += \
+obj-libshared-$(USE_FLOW) += \
     sol-fbp-graph.o \
     sol-fbp-internal-scanner.o \
     sol-fbp-parser.o
 
 ifeq (y,$(LOG))
-obj-libshared-$(FLOW_SUPPORT) += \
+obj-libshared-$(USE_FLOW) += \
     sol-fbp-internal-log.o
 endif
 
diff --git a/src/test-cpp/headers.cc.in b/src/test-cpp/headers.cc.in
index c8892f8e..8df66ced 100644
--- a/src/test-cpp/headers.cc.in
+++ b/src/test-cpp/headers.cc.in
@@ -61,7 +61,7 @@ SOL_UPDATE_DECLARE(my_update,
                    .shutdown = NULL);
 #endif
 
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
 
 SOL_FLOW_METATYPE(my_meta,
                   .name = NULL,
@@ -154,7 +154,7 @@ startup()
     SOL_JSON_SCANNER_OBJECT_LOOP(&scanner, &token, &token_key, &token_value, json_reason);
     SOL_JSON_SCANNER_OBJECT_LOOP_NEST(&scanner, &token, &token_key, &token_value, json_reason);
 
-#ifdef FLOW_SUPPORT
+#ifdef USE_FLOW
     struct sol_flow_static_node_spec node_spec = SOL_FLOW_STATIC_NODE_SPEC_GUARD;
     struct sol_flow_static_conn_spec conn_spec = SOL_FLOW_STATIC_CONN_SPEC_GUARD;
     struct sol_flow_static_port_spec port_sec = SOL_FLOW_STATIC_PORT_SPEC_GUARD;
diff --git a/src/test/Kconfig b/src/test/Kconfig
index fc359b6a..1bad230c 100644
--- a/src/test/Kconfig
+++ b/src/test/Kconfig
@@ -17,17 +17,17 @@ config TEST_COAP
 
 config TEST_FBP
 	bool "fbp"
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 	default y
 
 config TEST_FBP_SCANNER
 	bool "fbp scanner"
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 	default y
 
 config TEST_FLOW
 	bool "flow"
-	depends on FLOW_SUPPORT && FLOW_NODE_TYPE_INT && FLOW_NODE_TYPE_TIMER
+	depends on USE_FLOW && FLOW_NODE_TYPE_INT && FLOW_NODE_TYPE_TIMER
 	default y
 
 config TEST_FLOW_BUILDER
@@ -107,7 +107,7 @@ config TEST_UTIL
 
 config TEST_COMPOSED_TYPE
 	bool "composed-type"
-	depends on FLOW_SUPPORT
+	depends on USE_FLOW
 	default y
 
 config TEST_MESSAGE_DIGEST
diff --git a/tools/build/Makefile.targets b/tools/build/Makefile.targets
index 43b3d2ca..ae7d6965 100644
--- a/tools/build/Makefile.targets
+++ b/tools/build/Makefile.targets
@@ -237,7 +237,7 @@ endif #neq($(USE_NODEJS),)
 
 DEFAULT_ALIAS_FILE := $(build_aliasesdir)/50-default.json
 
-ifeq (y,$(FLOW_SUPPORT))
+ifeq (y,$(USE_FLOW))
 gen-aliases:
 	$(Q)$(MKDIR) -p $(build_aliasesdir)
 	$(Q)echo "     "GEN"   "$(DEFAULT_ALIAS_FILE)
diff --git a/tools/build/Makefile.vars b/tools/build/Makefile.vars
index 5072054e..3cfeebc3 100644
--- a/tools/build/Makefile.vars
+++ b/tools/build/Makefile.vars
@@ -405,7 +405,7 @@ JSON_FORMAT_SCRIPT := $(SCRIPTDIR)json-format.py
 HEADER_GEN :=
 PRE_GEN :=
 
-ifeq (y,$(FLOW_SUPPORT))
+ifeq (y,$(USE_FLOW))
 PRE_GEN += $(FLOW_NODE_TYPE_ALIAS) gen-aliases
 endif
 